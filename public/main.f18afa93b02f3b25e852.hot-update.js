/*! For license information please see main.f18afa93b02f3b25e852.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/classes/Page.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>i});var l=s("./node_modules/gsap/index.js"),o=s("./node_modules/lodash/each.js"),n=s.n(o);class i{constructor({element:e,elements:t,id:s}){this.selector=e,this.selectorChildren={...t},this.id=s,console.log("Constructor - Element:",this.selector),console.log("Constructor - Elements:",this.selectorChildren),console.log("Constructor - ID:",this.id)}create(){this.element=document.querySelector(this.selector),this.elements={},n()(this.selectorChildren,((e,t)=>{e instanceof window.HTMLElement||e instanceof window.NodeList||Array.isArray(e)?this.elements[t]=e:(this.elements[t]=document.querySelectorAll(e),0===this.elements[t].length?this.elements[t]=null:1===this.elements[t].length&&(this.elements[t]=document.querySelector(e))),console.log(this.elements[t],e)}))}addEventsListeners(){}show(){return new Promise((e=>{l.default.from(this.element,{autoAlpha:0,onComplete:e})}))}hide(){return new Promise((e=>{l.default.to(this.element,{autoAlpha:0,onComplete:e})}))}}}},(function(e){e.h=()=>"9096c3d3993a041cab6c"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5mMThhZmE5M2IwMmYzYjI1ZTg1Mi5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7dU1BSWUsTUFBTUEsRUFDbkJDLFdBQUFBLEVBQWEsUUFDWEMsRUFBTyxTQUNQQyxFQUFRLEdBQ1JDLElBQ0VDLEtBQUtDLFNBQVdKLEVBQ2hCRyxLQUFLRSxpQkFBbUIsSUFDbkJKLEdBR1BFLEtBQUtELEdBQUtBLEVBRVZJLFFBQVFDLElBQUkseUJBQTBCSixLQUFLQyxVQUMzQ0UsUUFBUUMsSUFBSSwwQkFBMkJKLEtBQUtFLGtCQUM1Q0MsUUFBUUMsSUFBSSxvQkFBcUJKLEtBQUtELEdBQ3hDLENBQ0FNLE1BQUFBLEdBQ0VMLEtBQUtILFFBQVVTLFNBQVNDLGNBQWNQLEtBQUtDLFVBQzNDRCxLQUFLRixTQUFXLENBQUMsRUFFakJVLElBQUtSLEtBQUtFLGtCQUFrQixDQUFDTyxFQUFPQyxLQUM5QkQsYUFBaUJFLE9BQU9DLGFBQWVILGFBQWlCRSxPQUFPRSxVQUFZQyxNQUFNQyxRQUFRTixHQUMzRlQsS0FBS0YsU0FBU1ksR0FBT0QsR0FFckJULEtBQUtGLFNBQVNZLEdBQU9KLFNBQVNVLGlCQUFpQlAsR0FFYixJQUE5QlQsS0FBS0YsU0FBU1ksR0FBS08sT0FDckJqQixLQUFLRixTQUFTWSxHQUFPLEtBQ2tCLElBQTlCVixLQUFLRixTQUFTWSxHQUFLTyxTQUM1QmpCLEtBQUtGLFNBQVNZLEdBQU9KLFNBQVNDLGNBQWNFLEtBSWhETixRQUFRQyxJQUFJSixLQUFLRixTQUFTWSxHQUFNRCxFQUFNLEdBRTFDLENBQ0FTLGtCQUFBQSxHQUNBLENBRUFDLElBQUFBLEdBQ0UsT0FBTyxJQUFJQyxTQUFRQyxJQUNqQkMsRUFBQUEsUUFBS0MsS0FBS3ZCLEtBQUtILFFBQVMsQ0FDdEIyQixVQUFXLEVBQ1hDLFdBQVlKLEdBQ1osR0FFTixDQUVBSyxJQUFBQSxHQUNFLE9BQU8sSUFBSU4sU0FBUUMsSUFDakJDLEVBQUFBLFFBQUtLLEdBQUczQixLQUFLSCxRQUFTLENBQ3BCMkIsVUFBVyxFQUNYQyxXQUFZSixHQUNaLEdBRU4sa0JDM0RGTyxFQUFvQkMsRUFBSSxJQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmxvZW1hLy4vYXBwL2NsYXNzZXMvUGFnZS5qcyIsIndlYnBhY2s6Ly9mbG9lbWEvd2VicGFjay9ydW50aW1lL2dldEZ1bGxIYXNoIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBHU0FQIGZyb20gJ2dzYXAnIC8vLSBsaWJyYXJ5IEdyZWVuIFNvY2sgQXBwIHRvIGFuaW1hdGUgZWxlbWVudHNcbmltcG9ydCBlYWNoIGZyb20gJ2xvZGFzaC9lYWNoJyAvLy0gbGlicmFyeSB0byB1c2UgZWFjaCBpbnN0ZWFkIG9mIGZvckVhY2ggbWV0aG9kLCB3aGljaCBpc24ndCBhdmFpbGFibGUgaW4gTm9kZS5qc1xuXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBhZ2Uge1xuICBjb25zdHJ1Y3RvciAoeyBcbiAgICBlbGVtZW50LCBcbiAgICBlbGVtZW50cyxcbiAgICBpZCB9KSB7XG4gICAgICB0aGlzLnNlbGVjdG9yID0gZWxlbWVudFxuICAgICAgdGhpcy5zZWxlY3RvckNoaWxkcmVuID0ge1xuICAgICAgICAuLi5lbGVtZW50c1xuICAgICAgfVxuXG4gICAgdGhpcy5pZCA9IGlkXG5cbiAgICBjb25zb2xlLmxvZyhcIkNvbnN0cnVjdG9yIC0gRWxlbWVudDpcIiwgdGhpcy5zZWxlY3Rvcik7XG4gICAgY29uc29sZS5sb2coXCJDb25zdHJ1Y3RvciAtIEVsZW1lbnRzOlwiLCB0aGlzLnNlbGVjdG9yQ2hpbGRyZW4pO1xuICAgIGNvbnNvbGUubG9nKFwiQ29uc3RydWN0b3IgLSBJRDpcIiwgdGhpcy5pZCk7XG4gIH1cbiAgY3JlYXRlKCkge1xuICAgIHRoaXMuZWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5zZWxlY3RvcilcbiAgICB0aGlzLmVsZW1lbnRzID0ge31cblxuICAgIGVhY2godGhpcy5zZWxlY3RvckNoaWxkcmVuLCAoZW50cnksIGtleSkgID0+IHtcbiAgICAgIGlmIChlbnRyeSBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MRWxlbWVudCB8fCBlbnRyeSBpbnN0YW5jZW9mIHdpbmRvdy5Ob2RlTGlzdCB8fCBBcnJheS5pc0FycmF5KGVudHJ5KSkge1xuICAgICAgICB0aGlzLmVsZW1lbnRzW2tleV0gPSBlbnRyeVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5lbGVtZW50c1trZXldID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChlbnRyeSlcbiAgICAgICAgXG4gICAgICAgIGlmICh0aGlzLmVsZW1lbnRzW2tleV0ubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgdGhpcy5lbGVtZW50c1trZXldID0gbnVsbFxuICAgICAgICB9IGVsc2UgaWYgKHRoaXMuZWxlbWVudHNba2V5XS5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICB0aGlzLmVsZW1lbnRzW2tleV0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGVudHJ5KVxuICAgICAgICB9XG5cbiAgICAgIH1cbiAgICAgIGNvbnNvbGUubG9nKHRoaXMuZWxlbWVudHNba2V5XSwgZW50cnkpXG4gICAgfSlcbiAgfVxuICBhZGRFdmVudHNMaXN0ZW5lcnMgKCkge1xuICB9XG5cbiAgc2hvdygpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICBHU0FQLmZyb20odGhpcy5lbGVtZW50LCB7XG4gICAgICAgIGF1dG9BbHBoYTogMCxcbiAgICAgICAgb25Db21wbGV0ZTogcmVzb2x2ZVxuICAgICAgfSlcbiAgICB9KVxuICB9XG5cbiAgaGlkZSgpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICBHU0FQLnRvKHRoaXMuZWxlbWVudCwge1xuICAgICAgICBhdXRvQWxwaGE6IDAsXG4gICAgICAgIG9uQ29tcGxldGU6IHJlc29sdmVcbiAgICAgIH0pXG4gICAgfSlcbiAgfVxufVxuIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5oID0gKCkgPT4gKFwiOTA5NmMzZDM5OTNhMDQxY2FiNmNcIikiXSwibmFtZXMiOlsiUGFnZSIsImNvbnN0cnVjdG9yIiwiZWxlbWVudCIsImVsZW1lbnRzIiwiaWQiLCJ0aGlzIiwic2VsZWN0b3IiLCJzZWxlY3RvckNoaWxkcmVuIiwiY29uc29sZSIsImxvZyIsImNyZWF0ZSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImVhY2giLCJlbnRyeSIsImtleSIsIndpbmRvdyIsIkhUTUxFbGVtZW50IiwiTm9kZUxpc3QiLCJBcnJheSIsImlzQXJyYXkiLCJxdWVyeVNlbGVjdG9yQWxsIiwibGVuZ3RoIiwiYWRkRXZlbnRzTGlzdGVuZXJzIiwic2hvdyIsIlByb21pc2UiLCJyZXNvbHZlIiwiR1NBUCIsImZyb20iLCJhdXRvQWxwaGEiLCJvbkNvbXBsZXRlIiwiaGlkZSIsInRvIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImgiXSwic291cmNlUm9vdCI6IiJ9