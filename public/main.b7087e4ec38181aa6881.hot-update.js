/*! For license information please see main.b7087e4ec38181aa6881.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/Canvas/Collections/Index.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>d});var l=s("./app/components/Canvas/Collections/Media.js"),i=s("./node_modules/lodash/map.js"),o=s.n(i),r=s("./node_modules/ogl/src/core/Transform.js"),n=s("./node_modules/ogl/src/extras/Plane.js"),c=s("./node_modules/gsap/index.js"),a=s("./node_modules/prefix/index.js"),h=s.n(a);const d=class{constructor({gl:e,scene:t,sizes:s}){this.gl=e,this.sizes=s,this.scene=t,this.transformPrefix=h()("transform"),this.group=new r.Transform,this.galleryElement=document.querySelector(".collections__gallery"),this.galleryElementWrapper=document.querySelector(".collections__gallery__wrapper"),this.titlesElement=document.querySelector(".collections__titles"),this.collectionsElements=document.querySelectorAll(".collections__article"),this.collectionsElementsActive="collections__article--active",this.mediasElements=document.querySelectorAll(".collections__gallery__media"),document.querySelectorAll(".collections__gallery__link").forEach((e=>{console.log("Lien détecté :",e.href),console.log("z-index du canvas :",this.gl.canvas.style.zIndex)})),this.scroll={current:0,target:0,start:0,lerp:.1,velocity:1},this.createGeometry(),this.createGallery(),this.group.setParent(this.scene),this.show()}createGeometry(){this.geometry=new n.Plane(this.gl)}createGallery(){this.medias=o()(this.mediasElements,((e,t)=>new l.default({element:e,geometry:this.geometry,index:t,gl:this.gl,scene:this.group,sizes:this.sizes})))}show(){o()(this.medias,(e=>e.show()))}hide(){o()(this.medias,(e=>e.hide()))}onResize(e){this.bounds=this.galleryElementWrapper.getBoundingClientRect(),this.scroll.last=this.scroll.target=0,o()(this.medias,(t=>t.onResize(e,this.scroll))),this.scroll.limit=this.bounds.width-this.medias[0].element.clientWidth}onTouchDown({x:e,y:t}){this.scroll.last=this.scroll.current}onTouchMove({x:e,y:t}){const s=e.start-e.end;this.scroll.target=this.scroll.last-s}onTouchUp({x:e,y:t}){}onWheel({pixelY:e}){this.scroll.target-=e}onChange(e){this.index=e;const t=parseInt(this.mediasElements[this.index].getAttribute("data-index"));o()(this.collectionsElements,((e,s)=>{s===t?e.classList.add(this.collectionsElementsActive):e.classList.remove(this.collectionsElementsActive)})),this.titlesElement.style[this.transformPrefix]=`translateY(-${25*t}%) translate(-50%, -50%) rotate(-90deg)`}update(){if(!this.bounds)return;this.scroll.target=c.default.utils.clamp(-this.scroll.limit,0,this.scroll.target),this.scroll.current=c.default.utils.interpolate(this.scroll.current,this.scroll.target,this.scroll.lerp),this.galleryElement.style[this.transformPrefix]=`translateX(${this.scroll.current}px)`,this.scroll.last<this.scroll.current?this.scroll.direction="right":this.scroll.last>this.scroll.current&&(this.scroll.direction="left"),this.scroll.last=this.scroll.current,o()(this.medias,((e,t)=>{e.update(this.scroll.current)}));const e=Math.floor(Math.abs(this.scroll.current/this.scroll.limit)*this.medias.length);this.index!==e&&this.onChange(e)}destroy(){this.scene.removeChild(this.group)}}}},(function(e){e.h=()=>"207bb56e45e0eec53581"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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L2NvbXBvbmVudHMvQ2FudmFzL0NvbGxlY3Rpb25zL0luZGV4LmpzIiwid2VicGFjazovL2Zsb2VtYS93ZWJwYWNrL3J1bnRpbWUvZ2V0RnVsbEhhc2giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE1lZGlhIGZyb20gJy4vTWVkaWEnXG5pbXBvcnQgbWFwIGZyb20gJ2xvZGFzaC9tYXAnXG5pbXBvcnQgeyBQbGFuZSwgVHJhbnNmb3JtIH0gZnJvbSAnb2dsJ1xuaW1wb3J0IEdTQVAgZnJvbSAnZ3NhcCdcbmltcG9ydCBQcmVmaXggZnJvbSAncHJlZml4J1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyB7XG4gIGNvbnN0cnVjdG9yKHsgZ2wsIHNjZW5lLCBzaXplcyB9KSB7XG4gICAgdGhpcy5nbCA9IGdsXG4gICAgdGhpcy5zaXplcyA9IHNpemVzXG4gICAgdGhpcy5zY2VuZSA9IHNjZW5lXG5cbiAgICB0aGlzLnRyYW5zZm9ybVByZWZpeCA9IFByZWZpeCgndHJhbnNmb3JtJylcblxuICAgIHRoaXMuZ3JvdXAgPSBuZXcgVHJhbnNmb3JtKCk7XG5cbiAgICB0aGlzLmdhbGxlcnlFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbGxlY3Rpb25zX19nYWxsZXJ5Jyk7XG4gICAgdGhpcy5nYWxsZXJ5RWxlbWVudFdyYXBwZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29sbGVjdGlvbnNfX2dhbGxlcnlfX3dyYXBwZXInKTtcblxuICAgIHRoaXMudGl0bGVzRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb2xsZWN0aW9uc19fdGl0bGVzJyk7XG5cbiAgICB0aGlzLmNvbGxlY3Rpb25zRWxlbWVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuY29sbGVjdGlvbnNfX2FydGljbGUnKTtcbiAgICB0aGlzLmNvbGxlY3Rpb25zRWxlbWVudHNBY3RpdmUgPSAnY29sbGVjdGlvbnNfX2FydGljbGUtLWFjdGl2ZSc7XG5cbiAgICB0aGlzLm1lZGlhc0VsZW1lbnRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmNvbGxlY3Rpb25zX19nYWxsZXJ5X19tZWRpYScpO1xuXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmNvbGxlY3Rpb25zX19nYWxsZXJ5X19saW5rJykuZm9yRWFjaChsaW5rID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKCdMaWVuIGTDqXRlY3TDqSA6JywgbGluay5ocmVmKTtcbiAgICAgIGNvbnNvbGUubG9nKCd6LWluZGV4IGR1IGNhbnZhcyA6JywgdGhpcy5nbC5jYW52YXMuc3R5bGUuekluZGV4KTtcbiAgICB9KTtcblxuICAgIHRoaXMuc2Nyb2xsID0ge1xuICAgICAgY3VycmVudDogMCxcbiAgICAgIHRhcmdldDogMCxcbiAgICAgIHN0YXJ0OiAwLFxuICAgICAgbGVycDogMC4xLFxuICAgICAgdmVsb2NpdHk6IDEsXG4gICAgfVxuXG4gICAgdGhpcy5jcmVhdGVHZW9tZXRyeSgpO1xuICAgIHRoaXMuY3JlYXRlR2FsbGVyeSgpO1xuXG4gICAgdGhpcy5ncm91cC5zZXRQYXJlbnQodGhpcy5zY2VuZSlcblxuICAgIHRoaXMuc2hvdygpXG4gIH1cblxuICBjcmVhdGVHZW9tZXRyeSgpIHtcbiAgICB0aGlzLmdlb21ldHJ5ID0gbmV3IFBsYW5lKHRoaXMuZ2wpXG4gIH1cblxuICBjcmVhdGVHYWxsZXJ5KCkge1xuICAgIHRoaXMubWVkaWFzID0gbWFwKHRoaXMubWVkaWFzRWxlbWVudHMsIChlbGVtZW50LCBpbmRleCkgPT4ge1xuICAgICAgcmV0dXJuIG5ldyBNZWRpYSh7XG4gICAgICAgIGVsZW1lbnQsXG4gICAgICAgIGdlb21ldHJ5OiB0aGlzLmdlb21ldHJ5LFxuICAgICAgICBpbmRleCxcbiAgICAgICAgZ2w6IHRoaXMuZ2wsXG4gICAgICAgIHNjZW5lOiB0aGlzLmdyb3VwLFxuICAgICAgICBzaXplczogdGhpcy5zaXplcywgIFxuICAgICAgfSlcblxuICAgIH0pXG4gIH1cbiAgICAgIC8qKlxuICAgICAqIEFuaW1hdGlvbnNcbiAgICAgKi9cbiAgICAgIHNob3coKSB7XG4gICAgICAgIG1hcCh0aGlzLm1lZGlhcywgbWVkaWEgPT4gbWVkaWEuc2hvdygpKVxuICAgICAgIH0gIFxuICAgICAgIGhpZGUoKSB7XG4gICAgICAgIG1hcCh0aGlzLm1lZGlhcywgbWVkaWEgPT4gbWVkaWEuaGlkZSgpKVxuICAgICAgIH1cbiAgICBcbiAgLyoqXG4gICAqIFxuICAgKiBldmVudHNcbiAgICovXG4gIG9uUmVzaXplKCBldmVudCApIHtcbiAgICBcbiAgICB0aGlzLmJvdW5kcyA9IHRoaXMuZ2FsbGVyeUVsZW1lbnRXcmFwcGVyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpOyAvLyBnZXQgdGhlIHNpemUgb2YgdGhlIGdhbGxlcnkgZWxlbWVudFxuICAgICAgXG4gICAgdGhpcy5zY3JvbGwubGFzdCA9IHRoaXMuc2Nyb2xsLnRhcmdldCA9IDBcbiAgICBcbiAgICBtYXAodGhpcy5tZWRpYXMsIG1lZGlhID0+IG1lZGlhLm9uUmVzaXplKCBldmVudCwgdGhpcy5zY3JvbGwgKSlcblxuICAgIHRoaXMuc2Nyb2xsLmxpbWl0ID0gdGhpcy5ib3VuZHMud2lkdGggLSB0aGlzLm1lZGlhc1swXS5lbGVtZW50LmNsaWVudFdpZHRoXG4gICAgfVxuICBcbiAgb25Ub3VjaERvd24gKHsgeCwgeSB9KSB7IFxuICAgIHRoaXMuc2Nyb2xsLmxhc3QgPSB0aGlzLnNjcm9sbC5jdXJyZW50XG4gIH1cblxuICBvblRvdWNoTW92ZSAoeyB4LCB5IH0pIHtcbiAgICBjb25zdCBkaXN0YW5jZSA9IHguc3RhcnQgLSB4LmVuZFxuXG4gICAgdGhpcy5zY3JvbGwudGFyZ2V0ID0gdGhpcy5zY3JvbGwubGFzdCAtIGRpc3RhbmNlXG4gIH1cblxuICBvblRvdWNoVXAgKHsgeCwgeSB9KSB7XG4gIH1cblxuICBvbldoZWVsKHsgcGl4ZWxZIH0pIHtcbiAgICB0aGlzLnNjcm9sbC50YXJnZXQgLT0gcGl4ZWxZICAvLyByZXZlcnNlZCBkb3duIGFuZCB1cCB0aGUgc2Nyb2xsIGRpcmVjdGlvblxuICB9XG4gIC8qKlxuICAgKiBDaGFuZ2VkXG4gICAqL1xuICBvbkNoYW5nZShpbmRleCkge1xuICAgIHRoaXMuaW5kZXggPSBpbmRleFxuXG4gICAgY29uc3Qgc2VsZWN0ZWRDb2xsZWN0aW9uID0gcGFyc2VJbnQodGhpcy5tZWRpYXNFbGVtZW50c1t0aGlzLmluZGV4XS5nZXRBdHRyaWJ1dGUoJ2RhdGEtaW5kZXgnKSlcblxuICAgIG1hcCh0aGlzLmNvbGxlY3Rpb25zRWxlbWVudHMsIChlbGVtZW50LCBlbGVtZW50SW5kZXgpID0+IHtcbiAgICAgIGlmIChlbGVtZW50SW5kZXggPT09IHNlbGVjdGVkQ29sbGVjdGlvbikge1xuICAgICAgICBlbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5jb2xsZWN0aW9uc0VsZW1lbnRzQWN0aXZlKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuY29sbGVjdGlvbnNFbGVtZW50c0FjdGl2ZSlcbiAgICAgIH1cbiAgICB9KVxuXG4gICAgdGhpcy50aXRsZXNFbGVtZW50LnN0eWxlW3RoaXMudHJhbnNmb3JtUHJlZml4XSA9IGB0cmFuc2xhdGVZKC0kezI1ICogc2VsZWN0ZWRDb2xsZWN0aW9ufSUpIHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSByb3RhdGUoLTkwZGVnKWBcblxuICB9XG5cbiAgLyoqXG4gICAqIFVwZGF0ZVxuICAgKi9cbiAgdXBkYXRlKCkge1xuICAgIGlmICghdGhpcy5ib3VuZHMpIHJldHVyblxuXG4gICAgdGhpcy5zY3JvbGwudGFyZ2V0ID0gR1NBUC51dGlscy5jbGFtcCgtdGhpcy5zY3JvbGwubGltaXQsIDAsIHRoaXMuc2Nyb2xsLnRhcmdldClcblxuICAgIHRoaXMuc2Nyb2xsLmN1cnJlbnQgPSBHU0FQLnV0aWxzLmludGVycG9sYXRlKHRoaXMuc2Nyb2xsLmN1cnJlbnQsIHRoaXMuc2Nyb2xsLnRhcmdldCwgdGhpcy5zY3JvbGwubGVycCkgXG5cbiAgICB0aGlzLmdhbGxlcnlFbGVtZW50LnN0eWxlW3RoaXMudHJhbnNmb3JtUHJlZml4XSA9IGB0cmFuc2xhdGVYKCR7dGhpcy5zY3JvbGwuY3VycmVudH1weClgXG5cbiAgICBpZih0aGlzLnNjcm9sbC5sYXN0IDwgdGhpcy5zY3JvbGwuY3VycmVudCkge1xuICAgICAgdGhpcy5zY3JvbGwuZGlyZWN0aW9uID0gJ3JpZ2h0J1xuICAgIH0gZWxzZSBpZiAodGhpcy5zY3JvbGwubGFzdCA+IHRoaXMuc2Nyb2xsLmN1cnJlbnQpIHtcbiAgICAgIHRoaXMuc2Nyb2xsLmRpcmVjdGlvbiA9ICdsZWZ0J1xuICAgIH1cblxuICAgIHRoaXMuc2Nyb2xsLmxhc3QgPSB0aGlzLnNjcm9sbC5jdXJyZW50XG5cbiAgICBtYXAodGhpcy5tZWRpYXMsIChtZWRpYSwgaW5kZXgpID0+IHtcbiAgICAgIG1lZGlhLnVwZGF0ZSh0aGlzLnNjcm9sbC5jdXJyZW50KVxuICAgIH0pXG5cbiAgICBjb25zdCBpbmRleCA9IE1hdGguZmxvb3IoTWF0aC5hYnModGhpcy5zY3JvbGwuY3VycmVudCAvIHRoaXMuc2Nyb2xsLmxpbWl0KSAqIHRoaXMubWVkaWFzLmxlbmd0aCkgLy8gZ2V0IHRoZSBpbmRleCBvZiB0aGUgY3VycmVudCBzY3JvbGwgcG9zaXRpb24gLSBNQXRoaS5mbG9vciB0byBnZXQgdGhlIGludGVnZXIgdmFsdWUgb2YgZWFjaCBpdGVtXG5cbiAgICBpZiAodGhpcy5pbmRleCAhPT0gaW5kZXgpIHtcbiAgICAgIFxuICAgICAgdGhpcy5vbkNoYW5nZShpbmRleClcblxuICAgIH0gLy8gcHJldmVudCB0byBoYXZlIHdlaXJkIGluZGV4IHZhbHVlc1xuICB9XG5cbiAgLyoqXG4gICAqIERlc3Ryb3lcbiAgICovXG4gIGRlc3Ryb3koKSB7XG4gICAgdGhpcy5zY2VuZS5yZW1vdmVDaGlsZCh0aGlzLmdyb3VwKVxuICB9XG59IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5oID0gKCkgPT4gKFwiMjA3YmI1NmU0NWUwZWVjNTM1ODFcIikiXSwibmFtZXMiOlsiY29uc3RydWN0b3IiLCJnbCIsInNjZW5lIiwic2l6ZXMiLCJ0aGlzIiwidHJhbnNmb3JtUHJlZml4IiwiUHJlZml4IiwiZ3JvdXAiLCJUcmFuc2Zvcm0iLCJnYWxsZXJ5RWxlbWVudCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImdhbGxlcnlFbGVtZW50V3JhcHBlciIsInRpdGxlc0VsZW1lbnQiLCJjb2xsZWN0aW9uc0VsZW1lbnRzIiwicXVlcnlTZWxlY3RvckFsbCIsImNvbGxlY3Rpb25zRWxlbWVudHNBY3RpdmUiLCJtZWRpYXNFbGVtZW50cyIsImZvckVhY2giLCJsaW5rIiwiY29uc29sZSIsImxvZyIsImhyZWYiLCJjYW52YXMiLCJzdHlsZSIsInpJbmRleCIsInNjcm9sbCIsImN1cnJlbnQiLCJ0YXJnZXQiLCJzdGFydCIsImxlcnAiLCJ2ZWxvY2l0eSIsImNyZWF0ZUdlb21ldHJ5IiwiY3JlYXRlR2FsbGVyeSIsInNldFBhcmVudCIsInNob3ciLCJnZW9tZXRyeSIsIlBsYW5lIiwibWVkaWFzIiwibWFwIiwiZWxlbWVudCIsImluZGV4IiwiTWVkaWEiLCJtZWRpYSIsImhpZGUiLCJvblJlc2l6ZSIsImV2ZW50IiwiYm91bmRzIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwibGFzdCIsImxpbWl0Iiwid2lkdGgiLCJjbGllbnRXaWR0aCIsIm9uVG91Y2hEb3duIiwieCIsInkiLCJvblRvdWNoTW92ZSIsImRpc3RhbmNlIiwiZW5kIiwib25Ub3VjaFVwIiwib25XaGVlbCIsInBpeGVsWSIsIm9uQ2hhbmdlIiwic2VsZWN0ZWRDb2xsZWN0aW9uIiwicGFyc2VJbnQiLCJnZXRBdHRyaWJ1dGUiLCJlbGVtZW50SW5kZXgiLCJjbGFzc0xpc3QiLCJhZGQiLCJyZW1vdmUiLCJ1cGRhdGUiLCJHU0FQIiwidXRpbHMiLCJjbGFtcCIsImludGVycG9sYXRlIiwiZGlyZWN0aW9uIiwiTWF0aCIsImZsb29yIiwiYWJzIiwibGVuZ3RoIiwiZGVzdHJveSIsInJlbW92ZUNoaWxkIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImgiXSwic291cmNlUm9vdCI6IiJ9