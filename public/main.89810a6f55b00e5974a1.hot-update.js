/*! For license information please see main.89810a6f55b00e5974a1.hot-update.js.LICENSE.txt */
self.webpackHotUpdatefloema("main",{"./app.js":(e,o,t)=>{t("./node_modules/dotenv/lib/main.js").config(),console.log(process.env.PRISMIC_ENDPOINT,process.env.PRISMIC_CLIENT_ID);const s=t("./node_modules/express/index.js")(),a=t(Object(function(){var e=new Error("Cannot find module 'path'");throw e.code="MODULE_NOT_FOUND",e}())),{createClient:n}=t("./node_modules/@prismicio/client/dist/index.cjs");var c=t("./node_modules/prismic-dom/dist/prismic-dom.min.js");const{access:i}=t(Object(function(){var e=new Error("Cannot find module 'fs'");throw e.code="MODULE_NOT_FOUND",e}()));function r(e){return n(process.env.PRISMIC_ENDPOINT,{accessToken:process.env.PRISMIC_ACCESS_TOKEN,fetch:e})}const l=e=>"/";s.use(((e,o,t)=>{o.locals.ctx={endpoint:process.env.PRISMIC_ENDPOINT,linkResolver:l},o.locals.PrismicDOM=c,t()})),s.set("views",a.join("/","views")),s.set("view engine","pug");const d=async e=>{const[o,t,s,{results:a}]=await Promise.all([e.getSingle("home"),e.getSingle("about"),e.getSingle("meta"),e.getByType("collection",{fetchLinks:"product.image"})]),n=[];return o.data.gallery.forEach((e=>{n.push(e.image.url)})),t.data.gallery.forEach((e=>{n.push(e.image.url)})),t.data.body.forEach((e=>{"gallery"===e.slice_type&&e.items.forEach((e=>{n.push(e.image.url)}))})),a.forEach((e=>{e.data.products.forEach((e=>{n.push(e.products_product.data.image.url)}))})),{assets:n,meta:s,home:o,collections:a,about:t}};s.get("/",(async(e,o)=>{const t=r(e),s=await d(t);o.render("pages/home",{...s})})),s.get("/about",(async(e,o)=>{const t=r(e),s=await d(t);o.render("pages/about",{...s})})),s.get("/collections",(async(e,o)=>{const t=await r(e),s=await d(t);o.render("pages/collections",{...s})})),s.get("/detail/:uid",(async(e,o)=>{const t=await r(e),s=await d(t),a=await t.getByUID("product",e.params.uid,{fetchLinks:"collection.title"});o.render("pages/detail",{...s,product:a})})),s.listen(3e3,(()=>{console.log("Example app listening on port 3000")}))}},(function(e){e.h=()=>"2bc97cfae61d9fac3462"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFvQkMsRUFBSSxJQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmxvZW1hLy4vYXBwLmpzIiwid2VicGFjazovL2Zsb2VtYS93ZWJwYWNrL3J1bnRpbWUvZ2V0RnVsbEhhc2giXSwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnZG90ZW52JykuY29uZmlnKCkgLy8gTG9hZCAuZW52IGZpbGVcblxuY29uc29sZS5sb2cocHJvY2Vzcy5lbnYuUFJJU01JQ19FTkRQT0lOVCwgcHJvY2Vzcy5lbnYuUFJJU01JQ19DTElFTlRfSUQpIC8vIE91dHB1dDogaHR0cHM6Ly95b3VyLXJlcG8tbmFtZS5wcmlzbWljLmlvL2FwaS92MlxuXG5jb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpXG5jb25zdCBhcHAgPSBleHByZXNzKClcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJylcbmNvbnN0IHBvcnQgPSAzMDAwXG5cbmNvbnN0IHsgY3JlYXRlQ2xpZW50IH0gPSByZXF1aXJlKCdAcHJpc21pY2lvL2NsaWVudCcpXG52YXIgUHJpc21pY0RPTSA9IHJlcXVpcmUoJ3ByaXNtaWMtZG9tJylcbmNvbnN0IHsgYWNjZXNzIH0gPSByZXF1aXJlKCdmcycpXG5cbmZ1bmN0aW9uIGluaXRBcGkocmVxKSB7XG4gIHJldHVybiBjcmVhdGVDbGllbnQocHJvY2Vzcy5lbnYuUFJJU01JQ19FTkRQT0lOVCwge1xuICAgIGFjY2Vzc1Rva2VuOiBwcm9jZXNzLmVudi5QUklTTUlDX0FDQ0VTU19UT0tFTixcbiAgICBmZXRjaDogcmVxXG4gIH0pXG59XG5cbmNvbnN0IGhhbmRsZUxpbmtSZXNvbHZlciA9IGRvYyA9PiB7IC8vIERlZmluZSB0aGUgVVJMIGRlcGVuZGluZyBvbiB0aGUgZG9jdW1lbnQgdHlwZVxuLy8gICBpZiAoZG9jLnR5cGUgPT09ICdwcm9kdWN0Jykge1xuLy8gICAgIHJldHVybiBgL2RldGFpbC8ke2RvYy5pZH1gXG4vLyAgIH0gZWxzZSBpZiAoZG9jLnR5cGUgPT09ICdjb2xsZWN0aW9uJykge1xuLy8gICAgIHJldHVybiBgL2NvbGxlY3Rpb25zLyR7ZG9jLmlkfWBcbi8vICAgfVxuICByZXR1cm4gJy8nXG59XG5cbmFwcC51c2UoKHJlcSwgcmVzLCBuZXh0KSA9PiB7ICAvL21pZGRsZXdhcmUgdG8gaW5qZWN0IHByaXNtaWMgY29udGV4dFxuICByZXMubG9jYWxzLmN0eCA9IHtcbiAgICBlbmRwb2ludDogcHJvY2Vzcy5lbnYuUFJJU01JQ19FTkRQT0lOVCxcbiAgICBsaW5rUmVzb2x2ZXI6IGhhbmRsZUxpbmtSZXNvbHZlclxuICB9XG4gIHJlcy5sb2NhbHMuUHJpc21pY0RPTSA9IFByaXNtaWNET01cbiAgbmV4dCgpXG59KVxuXG5hcHAuc2V0KCd2aWV3cycsIHBhdGguam9pbihfX2Rpcm5hbWUsICd2aWV3cycpKVxuYXBwLnNldCgndmlldyBlbmdpbmUnLCAncHVnJylcblxuY29uc3QgaGFuZGxlUmVxdWVzdCA9IGFzeW5jIGFwaSA9PiB7XG4gIGNvbnN0IFtob21lLCBhYm91dCwgbWV0YSwgeyByZXN1bHRzOiBjb2xsZWN0aW9ucyB9XSA9IGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICBhcGkuZ2V0U2luZ2xlKCdob21lJyksXG4gICAgYXBpLmdldFNpbmdsZSgnYWJvdXQnKSxcbiAgICBhcGkuZ2V0U2luZ2xlKCdtZXRhJyksXG4gICAgYXBpLmdldEJ5VHlwZSgnY29sbGVjdGlvbicsIHsgZmV0Y2hMaW5rczogJ3Byb2R1Y3QuaW1hZ2UnIH0pXG4gIF0pXG4gIFxuICBjb25zdCBhc3NldHMgPSBbXVxuXG4gIGhvbWUuZGF0YS5nYWxsZXJ5LmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICBhc3NldHMucHVzaChpdGVtLmltYWdlLnVybClcbiAgfSlcblxuICBhYm91dC5kYXRhLmdhbGxlcnkuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgIGFzc2V0cy5wdXNoKGl0ZW0uaW1hZ2UudXJsKVxuICB9KVxuXG4gIGFib3V0LmRhdGEuYm9keS5mb3JFYWNoKChzZWN0aW9uKSA9PiB7XG4gICAgaWYgKHNlY3Rpb24uc2xpY2VfdHlwZSA9PT0gJ2dhbGxlcnknKSB7XG4gICAgICBzZWN0aW9uLml0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgICAgYXNzZXRzLnB1c2goaXRlbS5pbWFnZS51cmwpXG4gICAgICB9KVxuICAgIH1cbiAgfSlcblxuICBjb2xsZWN0aW9ucy5mb3JFYWNoKChjb2xsZWN0aW9uKSA9PiB7XG4gICAgY29sbGVjdGlvbi5kYXRhLnByb2R1Y3RzLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgIGFzc2V0cy5wdXNoKGl0ZW0ucHJvZHVjdHNfcHJvZHVjdC5kYXRhLmltYWdlLnVybClcbiAgICB9KVxuICB9KVxuXG4gIHJldHVybiB7XG4gICAgYXNzZXRzLFxuICAgIG1ldGEsXG4gICAgaG9tZSxcbiAgICBjb2xsZWN0aW9ucyxcbiAgICBhYm91dCxcbiAgfVxufVxuXG5hcHAuZ2V0KCcvJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IGFwaSA9IGluaXRBcGkocmVxKVxuICBjb25zdCBkZWZhdWx0cyA9IGF3YWl0IGhhbmRsZVJlcXVlc3QoYXBpKVxuICByZXMucmVuZGVyKCdwYWdlcy9ob21lJywge1xuICAgIC4uLmRlZmF1bHRzLFxuICB9KVxufSlcblxuYXBwLmdldCgnL2Fib3V0JywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IGFwaSA9IGluaXRBcGkocmVxKVxuICBjb25zdCBkZWZhdWx0cyA9IGF3YWl0IGhhbmRsZVJlcXVlc3QoYXBpKVxuICByZXMucmVuZGVyKCdwYWdlcy9hYm91dCcsIHtcbiAgICAuLi5kZWZhdWx0cyxcbiAgfSlcbn0pXG5cbmFwcC5nZXQoJy9jb2xsZWN0aW9ucycsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICBjb25zdCBhcGkgPSBhd2FpdCBpbml0QXBpKHJlcSk7XG4gIGNvbnN0IGRlZmF1bHRzID0gYXdhaXQgaGFuZGxlUmVxdWVzdChhcGkpO1xuXG4gIHJlcy5yZW5kZXIoJ3BhZ2VzL2NvbGxlY3Rpb25zJywge1xuICAgIC4uLmRlZmF1bHRzLFxuICB9KTtcbn0pO1xuXG5hcHAuZ2V0KCcvZGV0YWlsLzp1aWQnLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgYXBpID0gYXdhaXQgaW5pdEFwaShyZXEpO1xuICBjb25zdCBkZWZhdWx0cyA9IGF3YWl0IGhhbmRsZVJlcXVlc3QoYXBpKTtcblxuICBjb25zdCBwcm9kdWN0ID0gYXdhaXQgYXBpLmdldEJ5VUlEKCdwcm9kdWN0JywgcmVxLnBhcmFtcy51aWQsIHtcbiAgICBmZXRjaExpbmtzOiAnY29sbGVjdGlvbi50aXRsZScsXG4gIH0pO1xuXG4gIHJlcy5yZW5kZXIoJ3BhZ2VzL2RldGFpbCcsIHtcbiAgICAuLi5kZWZhdWx0cyxcbiAgICBwcm9kdWN0LFxuICB9KTtcbn0pO1xuXG5cbmFwcC5saXN0ZW4ocG9ydCwgKCkgPT4ge1xuICBjb25zb2xlLmxvZyhgRXhhbXBsZSBhcHAgbGlzdGVuaW5nIG9uIHBvcnQgJHtwb3J0fWApXG59KSIsIl9fd2VicGFja19yZXF1aXJlX18uaCA9ICgpID0+IChcIjJiYzk3Y2ZhZTYxZDlmYWMzNDYyXCIpIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJjb25zb2xlIiwibG9nIiwicHJvY2VzcyIsImVudiIsIlBSSVNNSUNfRU5EUE9JTlQiLCJQUklTTUlDX0NMSUVOVF9JRCIsImFwcCIsImV4cHJlc3MiLCJwYXRoIiwiY3JlYXRlQ2xpZW50IiwiUHJpc21pY0RPTSIsImFjY2VzcyIsImluaXRBcGkiLCJyZXEiLCJhY2Nlc3NUb2tlbiIsIlBSSVNNSUNfQUNDRVNTX1RPS0VOIiwiZmV0Y2giLCJoYW5kbGVMaW5rUmVzb2x2ZXIiLCJkb2MiLCJ1c2UiLCJyZXMiLCJuZXh0IiwibG9jYWxzIiwiY3R4IiwiZW5kcG9pbnQiLCJsaW5rUmVzb2x2ZXIiLCJzZXQiLCJqb2luIiwiaGFuZGxlUmVxdWVzdCIsImFzeW5jIiwiaG9tZSIsImFib3V0IiwibWV0YSIsInJlc3VsdHMiLCJjb2xsZWN0aW9ucyIsIlByb21pc2UiLCJhbGwiLCJhcGkiLCJnZXRTaW5nbGUiLCJnZXRCeVR5cGUiLCJmZXRjaExpbmtzIiwiYXNzZXRzIiwiZGF0YSIsImdhbGxlcnkiLCJmb3JFYWNoIiwiaXRlbSIsInB1c2giLCJpbWFnZSIsInVybCIsImJvZHkiLCJzZWN0aW9uIiwic2xpY2VfdHlwZSIsIml0ZW1zIiwiY29sbGVjdGlvbiIsInByb2R1Y3RzIiwicHJvZHVjdHNfcHJvZHVjdCIsImdldCIsImRlZmF1bHRzIiwicmVuZGVyIiwicHJvZHVjdCIsImdldEJ5VUlEIiwicGFyYW1zIiwidWlkIiwibGlzdGVuIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImgiXSwic291cmNlUm9vdCI6IiJ9