/*! For license information please see main.fa8fb9157ce97e1a4012.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/classes/Page.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>m});var i=s("./node_modules/gsap/index.js"),n=s("./node_modules/lodash/each.js"),l=s.n(n),r=s("./node_modules/prefix/index.js"),o=s.n(r),a=s("./node_modules/normalize-wheel/index.js"),h=s.n(a);s("./app/animations/Title.js");class m{constructor({element:e,elements:t,id:s}){this.selector=e,this.selectorChildren={...t},this.id=s,this.transformPrefix=o()("transform"),console.log("Transform",this.transformPrefix),this.onMouseWheelEvent=this.onMouseWheel.bind(this),this.scroll={current:0,target:0,last:0,limit:1e3}}create(){this.element=document.querySelector(this.selector),this.elements={},this.scroll={current:0,target:0,last:0,limit:0},l()(this.selectorChildren,((e,t)=>{e instanceof window.HTMLElement||e instanceof window.NodeList||Array.isArray(e)?this.elements[t]=e:(this.elements[t]=document.querySelectorAll(e),0===this.elements[t].length?this.elements[t]=null:1===this.elements[t].length&&(this.elements[t]=document.querySelector(e)))}))}show(){return new Promise((e=>{this.animateIn=i.default.timeline(),this.animateIn.fromTo(this.element,{autoAlpha:0},{autoAlpha:1}),this.animateIn.call((t=>{this.addEventListeners(),e()}))}))}hide(){return new Promise((e=>{this.removeEventListeners(),this.animateOut=i.default.timeline(),this.animateOut.To(this.element,{autoAlpha:0,onComplete:e}),console.log("Hide - Element:",this.element)}))}onMouseWheel(e){const{pixelY:t}=h()(e);this.scroll.target+=t}onResize(){this.elements.wrapper&&(this.scroll.limit=this.elements.wrapper.clientHeight-window.innerHeight),l()(this.animations,(e=>e.onResize()))}update(){this.scroll.current=i.default.utils.clamp(0,this.scroll.limit,this.scroll.target),this.scroll.current=i.default.utils.interpolate(this.scroll.current,this.scroll.target,0),this.scroll.target<.01&&(this.scroll.target=0),this.elements.wrapper&&(this.elements.wrapper.style[this.transformPrefix]=`translateY(-${this.scroll.current}px)`)}addEventListeners(){window.addEventListener("mousewheel",this.onMouseWheelEvent),console.log("Add event listeners")}removeEventListeners(){window.removeEventListener("mousewheel",this.onMouseWheelEvent)}}}},(function(e){e.h=()=>"0e2e4814f4345a7ce0b4"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,