/*! For license information please see main.a360484a10a480a7db4d.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/Canvas/Collections/Index.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>a}),Object(function(){var e=new Error("Cannot find module './Media'");throw e.code="MODULE_NOT_FOUND",e}());var i=s("./node_modules/lodash/map.js"),h=s.n(i),o=s("./node_modules/ogl/src/core/Transform.js"),n=s("./node_modules/ogl/src/extras/Plane.js"),r=s("./node_modules/gsap/index.js");class a{constructor({gl:e,scene:t,sizes:s}){this.gl=e,this.sizes=s,this.scene=t,this.group=new o.Transform,this.galleryElement=document.querySelector(".home__gallery"),this.mediaElements=document.querySelectorAll(".home__gallery__media__image"),this.x={current:0,target:0,lerp:.1},this.y={current:0,target:0,lerp:.1},this.scrollCurrent={x:0,y:0},this.scroll={x:0,y:0},this.createGeometry(),this.createGallery(),this.group.setParent(this.scene),this.show()}createGeometry(){this.geometry=new n.Plane(this.gl)}createGallery(){this.medias=h()(this.mediaElements,((e,t)=>new Object(function(){var e=new Error("Cannot find module './Media'");throw e.code="MODULE_NOT_FOUND",e}())({element:e,geometry:this.geometry,index:t,gl:this.gl,scene:this.group,sizes:this.sizes})))}show(){h()(this.medias,(e=>e.show()))}hide(){h()(this.medias,(e=>e.hide()))}onResize(e){this.galleryBounds=this.galleryElement.getBoundingClientRect(),this.gallerySizes={height:this.galleryBounds.height/window.innerHeight*this.sizes.height,width:this.galleryBounds.width/window.innerWidth*this.sizes.width},this.scroll.x=this.x.target=0,this.scroll.y=this.y.target=0,this.sizes=e.sizes,h()(this.medias,(t=>t.onResize(e,this.scroll)))}onTouchDown({x:e,y:t}){this.scrollCurrent.x=this.scroll.x,this.scrollCurrent.y=this.scroll.y}onTouchMove({x:e,y:t}){const s=e.start-e.end,i=t.start-t.end;this.x.target=this.scrollCurrent.x-s,this.y.target=this.scrollCurrent.y-i}onTouchUp({x:e,y:t}){}onWheel({pixelX:e,pixelY:t}){this.x.target+=e,this.y.target-=t}update(){this.galleryBounds&&(this.x.current=r.default.utils.interpolate(this.x.current,this.x.target,this.x.lerp),this.y.current=r.default.utils.interpolate(this.y.current,this.y.target,this.y.lerp),this.scroll.x<this.x.current?this.x.direction="right":this.scroll.x>this.x.current&&(this.x.direction="left"),this.scroll.y<this.y.current?this.y.direction="top":this.scroll.y>this.y.current&&(this.y.direction="bottom"),this.scroll.x=this.x.current,this.scroll.y=this.y.current,h()(this.medias,((e,t)=>{const s=e.mesh.scale.x/2;if("left"===this.x.direction){e.mesh.position.x+s<-this.sizes.width/2&&(e.extra.x+=this.gallerySizes.width,e.mesh.rotation.z=r.default.utils.random(.02*-Math.PI,.02*Math.PI))}else if("right"===this.x.direction){e.mesh.position.x-s>this.sizes.width/2&&(e.extra.x-=this.gallerySizes.width,e.mesh.rotation.z=r.default.utils.random(.02*-Math.PI,.02*Math.PI))}const i=e.mesh.scale.y/2;if("top"===this.y.direction){e.mesh.position.y+i<-this.sizes.height/2&&(e.extra.y+=this.gallerySizes.height,e.mesh.rotation.z=r.default.utils.random(.02*-Math.PI,.02*Math.PI))}else if("bottom"===this.y.direction){e.mesh.position.y-i>this.sizes.height/2&&(e.extra.y-=this.gallerySizes.height,e.mesh.rotation.z=r.default.utils.random(.02*-Math.PI,.02*Math.PI))}e.update(this.scroll)})))}destroy(){this.scene.removeChild(this.group)}}},"./app/components/Canvas/Index.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>l});var i=s("./node_modules/ogl/src/core/Renderer.js"),h=s("./node_modules/ogl/src/core/Camera.js"),o=s("./node_modules/ogl/src/core/Transform.js"),n=s("./app/components/Canvas/Home/Index.js"),r=s("./app/components/Canvas/About/Index.js"),a=s("./app/components/Canvas/Collections/Index.js");class l{constructor({template:e}){this.template=e,this.x={start:0,distance:0,end:0},this.y={start:0,distance:0,end:0},this.createCamera(),this.createRenderer(),this.createScene(),this.onResize(),this.onChangeEnd(this.template)}createRenderer(){this.renderer=new i.Renderer({alpha:!0,antialias:!0}),this.gl=this.renderer.gl,document.body.appendChild(this.gl.canvas)}createCamera(){this.camera=new h.Camera(this.gl),this.camera.position.z=5}createScene(){this.scene=new o.Transform}createHome(){this.home=new n.default({gl:this.gl,scene:this.scene,sizes:this.sizes})}destroyHome(){this.home&&(this.home.destroy(),this.home=null)}createCollections(){this.collections=new a.default({gl:this.gl,scene:this.scene,sizes:this.sizes})}destroyCollections(){this.collections&&(this.collections.destroy(),this.collections=null)}createAbout(){this.about=new r.default({gl:this.gl,scene:this.scene,sizes:this.sizes})}destroyAbout(){this.about&&(this.about.destroy(),this.about=null)}onChangeStart(){this.about&&this.about.hide(),this.home&&this.home.hide()}onChangeEnd(e){"about"===e?this.createAbout():this.destroyAbout(),"home"===e?this.createHome():this.destroyHome()}onResize(){this.renderer.setSize(window.innerWidth,window.innerHeight),this.camera.perspective({aspect:window.innerWidth/window.innerHeight});const e=this.camera.fov*(Math.PI/180),t=2*Math.tan(e/2)*this.camera.position.z,s=t*this.camera.aspect;this.sizes={height:t,width:s};const i={sizes:this.sizes};this.about&&this.about.onResize(i),this.home&&this.home.onResize(i)}onTouchDown(e){this.isDown=!0,this.x.start=e.touches?e.touches[0].clientX:e.clientX,this.y.start=e.touches?e.touches[0].clientY:e.clientY;const t={x:this.x,y:this.y};this.about&&this.about.onTouchDown(t),this.home&&this.home.onTouchDown(t)}onTouchMove(e){if(!this.isDown)return;const t=e.touches?e.touches[0].clientX:e.clientX,s=e.touches?e.touches[0].clientY:e.clientY;this.x.end=t,this.y.end=s;const i={x:this.x,y:this.y};this.about&&this.about.onTouchMove(i),this.home&&this.home.onTouchMove(i)}onTouchUp(e){this.isDown=!1;const t=e.changedTouches?e.changedTouches[0].clientX:e.clientX,s=e.changedTouches?e.changedTouches[0].clientY:e.clientY;this.x.end=t,this.y.end=s;const i={x:this.x,y:this.y};this.about&&this.about.onTouchUp(i),this.home&&this.home.onTouchUp(i)}onWheel(e){this.home&&this.home.onWheel(e)}update(e){this.about&&this.about.update(e),this.home&&this.home.update(),this.renderer.render({camera:this.camera,scene:this.scene})}}}},(function(e){e.h=()=>"e9294dbe4707e7ae4fa8"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,