/*! For license information please see main.4ce3969cdd569d7d6403.hot-update.js.LICENSE.txt */
self.webpackHotUpdatefloema("main",{"./app.js":(e,o,s)=>{s("./node_modules/dotenv/lib/main.js").config();const t=s("./node_modules/morgan/index.js"),i=s("./node_modules/express/index.js"),a=s("./node_modules/errorhandler/index.js"),n=s("./node_modules/body-parser/index.js"),l=s("./node_modules/method-override/index.js"),c=i(),d=s("./node_modules/path-browserify/index.js");e.hot.accept();const r=s("./node_modules/@prismicio/client/dist/index.cjs"),p=(s("./node_modules/prismic-dom/dist/prismic-dom.min.js"),s("./node_modules/@prismicio/helpers/dist/prismic-helpers.esm.js")),u=e=>r.createClient(process.env.PRISMIC_ENDPOINT,{accessToken:process.env.PRISMIC_ACCESS_TOKEN,req:e,fetch}),m=e=>"product"===e.type?`/detail/${e.slug}`:"about"===e.type?"/about":"collections"===e.type?"/collections":"/";c.use(t("dev")),c.use(n.json()),c.use(n.urlencoded({extended:!1})),c.use(l()),c.use(a()),c.use(i.static(d.join("/","public"))),c.use(((e,o,s)=>{o.locals.ctx={endpoint:process.env.PRISMIC_ENDPOINT,linkResolver:m},o.locals.Prismic=r,o.locals.prismicH=p,o.locals.Link=m,o.locals.Numbers=e=>0===e?"One":1===e?"Two":2===e?"Three":3===e?"Four":"",s()}));const g=async e=>{const[o,s,t,i,a,{results:n}]=await Promise.all([e.getSingle("meta"),e.getSingle("preloader"),e.getSingle("navigation"),e.getSingle("home"),e.getSingle("about"),e.get({filters:[r.filter.at("document.type","collection")],fetchLinks:"product.image"})]),l=[];return a.data.gallery.forEach((e=>{l.push(e.image.url)})),a.data.body.forEach((e=>{"gallery"===e.slice_type&&e.items.forEach((e=>{l.push(e.image.url)}))})),{assets:l,meta:o,home:i,collections:n,about:a,navigation:t,preloader:s}};c.set("views",d.join("/","views")),c.set("view engine","pug"),c.locals.basedir=c.get("views"),c.get("/",(async(e,o)=>{const s=await u(e),t=await g(s);o.render("pages/home",{...t})})),c.get("/about",(async(e,o)=>{const s=await u(e),t=await g(s);console.log(t.about.data.body),o.render("pages/about",{...t})})),c.get("/detail/:uid",(async(e,o)=>{const s=await u(e),t=await g(s),i=await s.getByUID("product",e.params.uid,{fetchLinks:"collection.title"});console.log(i),o.render("pages/detail",{...t,product:i})})),c.get("/collections",(async(e,o)=>{const s=await u(e),t=await g(s);o.render("pages/collections",{...t})})),c.listen(3e3,(()=>{console.log("Example app listening on port 3000")}))}},(function(e){e.h=()=>"ea500d6d96e368bb8d43"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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TUFBTWEsS0FBS08sTUFHaENuQyxFQUFJMEMsT0FBTyxjQUFlLElBQ3JCRCxHQUNILElBR0puRSxFQUFJZ0QsSUFBSSxnQkFBZ0JaLE1BQU81QixFQUFLa0IsS0FDbEMsTUFBTW9CLFFBQVl2QyxFQUFRQyxHQUNwQjJELFFBQWlCaEMsRUFBY1csR0FFL0J5QixRQUFnQnpCLEVBQUkwQixTQUFTLFVBQVdoRSxFQUFJaUUsT0FBT0MsSUFBSyxDQUM1RHRCLFdBQVkscUJBR2RpQixRQUFRQyxJQUFJQyxHQUVaN0MsRUFBSTBDLE9BQU8sZUFBZ0IsSUFDdEJELEVBQ0hJLFdBQ0EsSUFHSnZFLEVBQUlnRCxJQUFJLGdCQUFnQlosTUFBTzVCLEVBQUtrQixLQUNsQyxNQUFNb0IsUUFBWXZDLEVBQVFDLEdBQ3BCMkQsUUFBaUJoQyxFQUFjVyxHQUVyQ3BCLEVBQUkwQyxPQUFPLG9CQUFxQixJQUMzQkQsR0FDSCxJQUdKbkUsRUFBSTJFLE9BdExTLEtBc0xJLEtBQ2ZOLFFBQVFDLElBQUkscUNBQXdDLG1CQ2pNdERNLEVBQW9CQyxFQUFJLElBQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbG9lbWEvLi9hcHAuanMiLCJ3ZWJwYWNrOi8vZmxvZW1hL3dlYnBhY2svcnVudGltZS9nZXRGdWxsSGFzaCJdLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCdkb3RlbnYnKS5jb25maWcoKTtcblxuY29uc3QgbG9nZ2VyID0gcmVxdWlyZSgnbW9yZ2FuJyk7XG5jb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3QgZXJyb3JIYW5kbGVyID0gcmVxdWlyZSgnZXJyb3JoYW5kbGVyJyk7XG5jb25zdCBib2R5UGFyc2VyID0gcmVxdWlyZSgnYm9keS1wYXJzZXInKTtcbmNvbnN0IG1ldGhvZE92ZXJyaWRlID0gcmVxdWlyZSgnbWV0aG9kLW92ZXJyaWRlJyk7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBwb3J0ID0gMzAwMDtcblxuaWYgKG1vZHVsZS5ob3QpIHtcbiAgbW9kdWxlLmhvdC5hY2NlcHQoKTtcbn1cblxuY29uc3QgUHJpc21pYyA9IHJlcXVpcmUoJ0BwcmlzbWljaW8vY2xpZW50Jyk7XG5jb25zdCBwcmlzbWljRE9NID0gcmVxdWlyZSgncHJpc21pYy1kb20nKTtcbmNvbnN0IHByaXNtaWNIID0gcmVxdWlyZSgnQHByaXNtaWNpby9oZWxwZXJzJyk7XG5cbi8vIGNvbnN0IHsgTG9nZ2VyIH0gPSByZXF1aXJlKCdzYXNzJyk7XG4vLyBjb25zdCBQcmlzbWljSCA9IHJlcXVpcmUoJ0BwcmlzbWljaW8vaGVscGVycycpO1xuXG4vL0luaXRpYWxpemUgUHJpc21pYy5pbyBhcGlcbmNvbnN0IGluaXRBcGkgPSAocmVxKSA9PiB7XG4gIHJldHVybiBQcmlzbWljLmNyZWF0ZUNsaWVudChwcm9jZXNzLmVudi5QUklTTUlDX0VORFBPSU5ULCB7XG4gICAgYWNjZXNzVG9rZW46IHByb2Nlc3MuZW52LlBSSVNNSUNfQUNDRVNTX1RPS0VOLFxuICAgIHJlcSxcbiAgICBmZXRjaCxcbiAgfSk7XG59O1xuXG4vL0xpbmsgUmVzb2x2ZXJcbmNvbnN0IGhhbmRsZUxpbmtSZXNvbHZlciA9IChkb2MpID0+IHtcbiAgaWYgKGRvYy50eXBlID09PSAncHJvZHVjdCcpIHtcbiAgICByZXR1cm4gYC9kZXRhaWwvJHtkb2Muc2x1Z31gO1xuICB9XG5cbiAgaWYgKGRvYy50eXBlID09PSAnYWJvdXQnKSB7XG4gICAgcmV0dXJuICcvYWJvdXQnO1xuICB9XG5cbiAgaWYgKGRvYy50eXBlID09PSAnY29sbGVjdGlvbnMnKSB7XG4gICAgcmV0dXJuICcvY29sbGVjdGlvbnMnO1xuICB9XG4gIC8vIERlZmluZSB0aGUgdXJsIGRlcGVuZGluZyBvbiB0aGUgZG9jdW1lbnQgdHlwZVxuICAvLyAgIGlmIChkb2MudHlwZSA9PT0gJ3BhZ2UnKSB7XG4gIC8vICAgICByZXR1cm4gJy9wYWdlLycgKyBkb2MudWlkO1xuICAvLyAgIH0gZWxzZSBpZiAoZG9jLnR5cGUgPT09ICdibG9nX3Bvc3QnKSB7XG4gIC8vICAgICByZXR1cm4gJy9ibG9nLycgKyBkb2MudWlkO1xuICAvLyAgIH1cbiAgcmV0dXJuICcvJztcbn07XG5cbmFwcC51c2UobG9nZ2VyKCdkZXYnKSk7XG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IGZhbHNlIH0pKTtcbmFwcC51c2UobWV0aG9kT3ZlcnJpZGUoKSk7XG5hcHAudXNlKGVycm9ySGFuZGxlcigpKTtcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMocGF0aC5qb2luKF9fZGlybmFtZSwgJ3B1YmxpYycpKSk7XG5cbi8vTWlkZGxld2FyZSB0byBhZGQgcHJpc21pYyBjb250ZW50XG5hcHAudXNlKChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICByZXMubG9jYWxzLmN0eCA9IHtcbiAgICBlbmRwb2ludDogcHJvY2Vzcy5lbnYuUFJJU01JQ19FTkRQT0lOVCxcbiAgICBsaW5rUmVzb2x2ZXI6IGhhbmRsZUxpbmtSZXNvbHZlcixcbiAgfTtcblxuICByZXMubG9jYWxzLlByaXNtaWMgPSBQcmlzbWljO1xuICByZXMubG9jYWxzLnByaXNtaWNIID0gcHJpc21pY0g7IC8vUHJpc21pYyBoZWxwZXJzXG5cbiAgcmVzLmxvY2Fscy5MaW5rID0gaGFuZGxlTGlua1Jlc29sdmVyO1xuICByZXMubG9jYWxzLk51bWJlcnMgPSAoaW5kZXgpID0+IHtcbiAgICByZXR1cm4gaW5kZXggPT09IDBcbiAgICAgID8gJ09uZSdcbiAgICAgIDogaW5kZXggPT09IDFcbiAgICAgID8gJ1R3bydcbiAgICAgIDogaW5kZXggPT09IDJcbiAgICAgID8gJ1RocmVlJ1xuICAgICAgOiBpbmRleCA9PT0gM1xuICAgICAgPyAnRm91cidcbiAgICAgIDogJyc7XG4gIH07XG5cbiAgbmV4dCgpO1xufSk7XG5cbi8vSGFuZGxlIEFQSSByZXF1ZXN0XG5jb25zdCBoYW5kbGVSZXF1ZXN0ID0gYXN5bmMgKGFwaSkgPT4ge1xuICBjb25zdCBbbWV0YSwgcHJlbG9hZGVyLCBuYXZpZ2F0aW9uLCBob21lLCBhYm91dCwgeyByZXN1bHRzOiBjb2xsZWN0aW9ucyB9XSA9XG4gICAgYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgYXBpLmdldFNpbmdsZSgnbWV0YScpLFxuICAgICAgYXBpLmdldFNpbmdsZSgncHJlbG9hZGVyJyksXG4gICAgICBhcGkuZ2V0U2luZ2xlKCduYXZpZ2F0aW9uJyksXG4gICAgICBhcGkuZ2V0U2luZ2xlKCdob21lJyksXG4gICAgICBhcGkuZ2V0U2luZ2xlKCdhYm91dCcpLFxuICAgICAgYXBpLmdldCh7XG4gICAgICAgIGZpbHRlcnM6IFtQcmlzbWljLmZpbHRlci5hdCgnZG9jdW1lbnQudHlwZScsICdjb2xsZWN0aW9uJyldLFxuICAgICAgICBmZXRjaExpbmtzOiAncHJvZHVjdC5pbWFnZScsXG4gICAgICB9KSxcbiAgICBdKTtcblxuICAvLyAgIGNvbnNvbGUubG9nKGFib3V0LCBob21lLCBjb2xsZWN0aW9ucyk7XG5cbiAgY29uc3QgYXNzZXRzID0gW107XG5cbiAgLy8gICBob21lLmRhdGEuZ2FsbGVyeS5mb3JFYWNoKChpdGVtKSA9PiB7XG4gIC8vICAgICBhc3NldHMucHVzaChpdGVtLmltYWdlLnVybCk7XG4gIC8vICAgfSk7XG5cbiAgYWJvdXQuZGF0YS5nYWxsZXJ5LmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICBhc3NldHMucHVzaChpdGVtLmltYWdlLnVybCk7XG4gIH0pO1xuXG4gIGFib3V0LmRhdGEuYm9keS5mb3JFYWNoKChzZWN0aW9uKSA9PiB7XG4gICAgaWYgKHNlY3Rpb24uc2xpY2VfdHlwZSA9PT0gJ2dhbGxlcnknKSB7XG4gICAgICBzZWN0aW9uLml0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgICAgYXNzZXRzLnB1c2goaXRlbS5pbWFnZS51cmwpO1xuICAgICAgfSk7XG4gICAgfVxuICB9KTtcblxuICAvLyAgIGNvbGxlY3Rpb25zLmZvckVhY2goKGNvbGxlY3Rpb24pID0+IHtcbiAgLy8gICAgIGNvbGxlY3Rpb24uZGF0YS5saXN0LmZvckVhY2goKGl0ZW0pID0+IHtcbiAgLy8gICAgICAgYXNzZXRzLnB1c2goaXRlbS5wcm9kdWN0LmRhdGEuaW1hZ2UudXJsKTtcbiAgLy8gICAgIH0pO1xuICAvLyAgIH0pO1xuXG4gIC8vIGNvbnNvbGUubG9nKGNvbGxlY3Rpb25zKTtcblxuICByZXR1cm4ge1xuICAgIGFzc2V0cyxcbiAgICBtZXRhLFxuICAgIGhvbWUsXG4gICAgY29sbGVjdGlvbnMsXG4gICAgYWJvdXQsXG4gICAgbmF2aWdhdGlvbixcbiAgICBwcmVsb2FkZXIsXG4gIH07XG59O1xuXG5hcHAuc2V0KCd2aWV3cycsIHBhdGguam9pbihfX2Rpcm5hbWUsICd2aWV3cycpKTtcbmFwcC5zZXQoJ3ZpZXcgZW5naW5lJywgJ3B1ZycpO1xuYXBwLmxvY2Fscy5iYXNlZGlyID0gYXBwLmdldCgndmlld3MnKTtcbignJyk7XG5cbmFwcC5nZXQoJy8nLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgYXBpID0gYXdhaXQgaW5pdEFwaShyZXEpO1xuICBjb25zdCBkZWZhdWx0cyA9IGF3YWl0IGhhbmRsZVJlcXVlc3QoYXBpKTtcblxuICByZXMucmVuZGVyKCdwYWdlcy9ob21lJywge1xuICAgIC4uLmRlZmF1bHRzLFxuICB9KTtcbn0pO1xuXG5hcHAuZ2V0KCcvYWJvdXQnLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgYXBpID0gYXdhaXQgaW5pdEFwaShyZXEpO1xuICBjb25zdCBkZWZhdWx0cyA9IGF3YWl0IGhhbmRsZVJlcXVlc3QoYXBpKTtcblxuICBjb25zb2xlLmxvZyhkZWZhdWx0cy5hYm91dC5kYXRhLmJvZHkpXG5cblxuICByZXMucmVuZGVyKCdwYWdlcy9hYm91dCcsIHtcbiAgICAuLi5kZWZhdWx0cyxcbiAgfSk7XG59KTtcblxuYXBwLmdldCgnL2RldGFpbC86dWlkJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IGFwaSA9IGF3YWl0IGluaXRBcGkocmVxKTtcbiAgY29uc3QgZGVmYXVsdHMgPSBhd2FpdCBoYW5kbGVSZXF1ZXN0KGFwaSk7XG5cbiAgY29uc3QgcHJvZHVjdCA9IGF3YWl0IGFwaS5nZXRCeVVJRCgncHJvZHVjdCcsIHJlcS5wYXJhbXMudWlkLCB7XG4gICAgZmV0Y2hMaW5rczogJ2NvbGxlY3Rpb24udGl0bGUnLFxuICB9KTtcblxuICBjb25zb2xlLmxvZyhwcm9kdWN0KVxuXG4gIHJlcy5yZW5kZXIoJ3BhZ2VzL2RldGFpbCcsIHtcbiAgICAuLi5kZWZhdWx0cyxcbiAgICBwcm9kdWN0LFxuICB9KTtcbn0pO1xuXG5hcHAuZ2V0KCcvY29sbGVjdGlvbnMnLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgYXBpID0gYXdhaXQgaW5pdEFwaShyZXEpO1xuICBjb25zdCBkZWZhdWx0cyA9IGF3YWl0IGhhbmRsZVJlcXVlc3QoYXBpKTtcblxuICByZXMucmVuZGVyKCdwYWdlcy9jb2xsZWN0aW9ucycsIHtcbiAgICAuLi5kZWZhdWx0cyxcbiAgfSk7XG59KTtcblxuYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiB7XG4gIGNvbnNvbGUubG9nKGBFeGFtcGxlIGFwcCBsaXN0ZW5pbmcgb24gcG9ydCAke3BvcnR9YCk7XG59KTtcblxuLy8gL1wiQHByaXNtaWNpby9jbGllbnRcIjogXCJeNi4yLjBcIixcbi8vIHtcbi8vIG1ldGE6IHtcbi8vICAgICBkYXRhOiB7XG4vLyAgICAgICB0aXRsZTogJ0Zsb2VtYScsXG4vLyAgICAgICBkZXNjcmlwdGlvbjogJ01ldGFkYXRhIGRlc2NyaXB0aW9uLicsXG4vLyAgICAgfSxcbi8vICAgfSxcbi8vIH0iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmggPSAoKSA9PiAoXCJlYTUwMGQ2ZDk2ZTM2OGJiOGQ0M1wiKSJdLCJuYW1lcyI6WyJyZXF1aXJlIiwibG9nZ2VyIiwiZXhwcmVzcyIsImVycm9ySGFuZGxlciIsImJvZHlQYXJzZXIiLCJtZXRob2RPdmVycmlkZSIsImFwcCIsInBhdGgiLCJtb2R1bGUiLCJob3QiLCJhY2NlcHQiLCJQcmlzbWljIiwicHJpc21pY0giLCJpbml0QXBpIiwicmVxIiwiY3JlYXRlQ2xpZW50IiwicHJvY2VzcyIsImVudiIsIlBSSVNNSUNfRU5EUE9JTlQiLCJhY2Nlc3NUb2tlbiIsIlBSSVNNSUNfQUNDRVNTX1RPS0VOIiwiZmV0Y2giLCJoYW5kbGVMaW5rUmVzb2x2ZXIiLCJkb2MiLCJ0eXBlIiwic2x1ZyIsInVzZSIsImpzb24iLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJzdGF0aWMiLCJqb2luIiwicmVzIiwibmV4dCIsImxvY2FscyIsImN0eCIsImVuZHBvaW50IiwibGlua1Jlc29sdmVyIiwiTGluayIsIk51bWJlcnMiLCJpbmRleCIsImhhbmRsZVJlcXVlc3QiLCJhc3luYyIsIm1ldGEiLCJwcmVsb2FkZXIiLCJuYXZpZ2F0aW9uIiwiaG9tZSIsImFib3V0IiwicmVzdWx0cyIsImNvbGxlY3Rpb25zIiwiUHJvbWlzZSIsImFsbCIsImFwaSIsImdldFNpbmdsZSIsImdldCIsImZpbHRlcnMiLCJmaWx0ZXIiLCJhdCIsImZldGNoTGlua3MiLCJhc3NldHMiLCJkYXRhIiwiZ2FsbGVyeSIsImZvckVhY2giLCJpdGVtIiwicHVzaCIsImltYWdlIiwidXJsIiwiYm9keSIsInNlY3Rpb24iLCJzbGljZV90eXBlIiwiaXRlbXMiLCJzZXQiLCJiYXNlZGlyIiwiZGVmYXVsdHMiLCJyZW5kZXIiLCJjb25zb2xlIiwibG9nIiwicHJvZHVjdCIsImdldEJ5VUlEIiwicGFyYW1zIiwidWlkIiwibGlzdGVuIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImgiXSwic291cmNlUm9vdCI6IiJ9