/*! For license information please see main.fd1488e485c2b5411ac6.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/preloader.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>r});var n=s("./node_modules/ogl/src/core/Texture.js"),a=s("./node_modules/gsap/index.js"),o=s("./app/classes/Component.js"),i=(s("./node_modules/lodash/each.js"),s("./app/utils/text.js"));class r extends o.default{constructor({canvas:e}){super({element:".preloader",elements:{title:".preloader__text",number:".preloader__number",numberText:".preloader__number__text"}}),this.canvas=e,window.TEXTURES={},(0,i.split)({element:this.elements.title,expression:"<br>"}),(0,i.split)({element:this.elements.title,expression:"<br>"}),this.elements.titleSpans=this.elements.title.querySelectorAll("span span"),this.length=0,this.createLoader()}createLoader(){window.ASSETS.forEach((e=>{const t=new n.Texture(this.canvas.gl,{generateMipmaps:!1}),s=new window.Image;s.crossOrigin="anonymous",s.src=e,s.onload=e=>{t.image=s,this.onAssetLoaded()},window.TEXTURES[e]=t}))}onAssetLoaded(e){this.length+=1;const t=this.length/this.window.ASSETS.length;this.elements.numberText.innerHTML=`${Math.round(100*t)}%`,1===t&&this.onLoaded()}onLoaded(){return new Promise((e=>{this.animateOut=a.default.timeline({delay:1.5}),this.animateOut.to(this.elements.titleSpans,{duration:1,ease:"expo.Out",stagger:.3,y:"100%"}),this.animateOut.to(this.elements.numberText,{duration:.5,ease:"expo.Out",stagger:.3,y:"100%"},"-=0.3"),this.animateOut.to(this.element,{duration:.5,ease:"expo.out",scaleY:0,transformOrigin:"0 0"}),this.animateOut.call((()=>{this.emit("completed")}))}))}destroy(){this.element.parentNode.removeChild(this.element)}}}},(function(e){e.h=()=>"cbd731bc038e486e5b41"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5mZDE0ODhlNDg1YzJiNTQxMWFjNi5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7aVRBTWUsTUFBTUEsVUFBa0JDLEVBQUFBLFFBQ3JDQyxXQUFBQSxFQUFZLE9BQUVDLElBQ1pDLE1BQU0sQ0FDSkMsUUFBUyxhQUNUQyxTQUFVLENBQ1JDLE1BQU8sbUJBQ1BDLE9BQVEscUJBQ1JDLFdBQVksOEJBSWhCQyxLQUFLUCxPQUFTQSxFQUVkUSxPQUFPQyxTQUFXLENBQUMsR0FFbkJDLEVBQUFBLEVBQUFBLE9BQU0sQ0FDSlIsUUFBU0ssS0FBS0osU0FBU0MsTUFDdkJPLFdBQVksVUFHZEQsRUFBQUEsRUFBQUEsT0FBTSxDQUNKUixRQUFTSyxLQUFLSixTQUFTQyxNQUN2Qk8sV0FBWSxTQUlkSixLQUFLSixTQUFTUyxXQUFhTCxLQUFLSixTQUFTQyxNQUFNUyxpQkFBaUIsYUFFaEVOLEtBQUtPLE9BQVMsRUFHZFAsS0FBS1EsY0FFUCxDQUVBQSxZQUFBQSxHQUNFUCxPQUFPUSxPQUFPQyxTQUFRQyxJQUNwQixNQUFNQyxFQUFVLElBQUlDLEVBQUFBLFFBQVFiLEtBQUtQLE9BQU9xQixHQUFHLENBQ3pDQyxpQkFBaUIsSUFHYkMsRUFBUSxJQUFJZixPQUFPZ0IsTUFFekJELEVBQU1FLFlBQWMsWUFDcEJGLEVBQU1HLElBQU1SLEVBQ1pLLEVBQU1JLE9BQVNDLElBQ2JULEVBQVFELE1BQVFLLEVBRWhCaEIsS0FBS3NCLGVBQWUsRUFHdEJyQixPQUFPQyxTQUFTUyxHQUFTQyxDQUFPLEdBRXBDLENBRUFVLGFBQUFBLENBQWNYLEdBQ1pYLEtBQUtPLFFBQVUsRUFFZixNQUFNZ0IsRUFBVXZCLEtBQUtPLE9BQVNQLEtBQUtDLE9BQU9RLE9BQU9GLE9BRWpEUCxLQUFLSixTQUFTRyxXQUFXeUIsVUFBWSxHQUFHQyxLQUFLQyxNQUFnQixJQUFWSCxNQUVuQyxJQUFaQSxHQUNGdkIsS0FBSzJCLFVBRVQsQ0FDQUEsUUFBQUEsR0FDQSxPQUFPLElBQUlDLFNBQVFDLElBQ2pCN0IsS0FBSzhCLFdBQWFDLEVBQUFBLFFBQUtDLFNBQVMsQ0FDOUJDLE1BQU8sTUFHVGpDLEtBQUs4QixXQUFXSSxHQUFHbEMsS0FBS0osU0FBU1MsV0FBWSxDQUUzQzhCLFNBQVUsRUFDVkMsS0FBTSxXQUNOQyxRQUFTLEdBQ1RDLEVBQUcsU0FJTHRDLEtBQUs4QixXQUFXSSxHQUFHbEMsS0FBS0osU0FBU0csV0FBWSxDQUMzQ29DLFNBQVUsR0FDVkMsS0FBTSxXQUNOQyxRQUFTLEdBQ1RDLEVBQUcsUUFDRixTQUVIdEMsS0FBSzhCLFdBQVdJLEdBQUdsQyxLQUFLTCxRQUFTLENBQy9Cd0MsU0FBVSxHQUNWQyxLQUFNLFdBQ05HLE9BQVEsRUFDUkMsZ0JBQWlCLFFBR25CeEMsS0FBSzhCLFdBQVdXLE1BQUssS0FDbkJ6QyxLQUFLMEMsS0FBSyxZQUFZLEdBQ3RCLEdBRU4sQ0FDRUMsT0FBQUEsR0FDRTNDLEtBQUtMLFFBQVFpRCxXQUFXQyxZQUFZN0MsS0FBS0wsUUFDM0Msa0JDNUdGbUQsRUFBb0JDLEVBQUksSUFBTSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zsb2VtYS8uL2FwcC9jb21wb25lbnRzL3ByZWxvYWRlci5qcyIsIndlYnBhY2s6Ly9mbG9lbWEvd2VicGFjay9ydW50aW1lL2dldEZ1bGxIYXNoIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRleHR1cmUgfSBmcm9tICdvZ2wnXG5pbXBvcnQgR1NBUCBmcm9tICdnc2FwJztcbmltcG9ydCBDb21wb25lbnQgZnJvbSBcIi4uL2NsYXNzZXMvQ29tcG9uZW50XCI7XG5pbXBvcnQgZWFjaCBmcm9tICdsb2Rhc2gvZWFjaCc7XG5pbXBvcnQgeyBzcGxpdCB9IGZyb20gJy4uL3V0aWxzL3RleHQnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQcmVsb2FkZXIgZXh0ZW5kcyBDb21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcih7IGNhbnZhcyB9KSB7XG4gICAgc3VwZXIoe1xuICAgICAgZWxlbWVudDogXCIucHJlbG9hZGVyXCIsXG4gICAgICBlbGVtZW50czoge1xuICAgICAgICB0aXRsZTogJy5wcmVsb2FkZXJfX3RleHQnLFxuICAgICAgICBudW1iZXI6ICcucHJlbG9hZGVyX19udW1iZXInLCAvLyBnZXQgYWNjZXNzIHRvIHRoZSBsb2FkZXIgbnVtYmVyXG4gICAgICAgIG51bWJlclRleHQ6ICcucHJlbG9hZGVyX19udW1iZXJfX3RleHQnLFxuICAgICAgfVxuICAgIH0pO1xuXG4gICAgdGhpcy5jYW52YXMgPSBjYW52YXNcblxuICAgIHdpbmRvdy5URVhUVVJFUyA9IHt9XG5cbiAgICBzcGxpdCh7XG4gICAgICBlbGVtZW50OiB0aGlzLmVsZW1lbnRzLnRpdGxlLFxuICAgICAgZXhwcmVzc2lvbjogJzxicj4nXG4gICAgfSlcblxuICAgIHNwbGl0KHtcbiAgICAgIGVsZW1lbnQ6IHRoaXMuZWxlbWVudHMudGl0bGUsXG4gICAgICBleHByZXNzaW9uOiAnPGJyPidcbiAgICB9KVxuXG5cbiAgICB0aGlzLmVsZW1lbnRzLnRpdGxlU3BhbnMgPSB0aGlzLmVsZW1lbnRzLnRpdGxlLnF1ZXJ5U2VsZWN0b3JBbGwoJ3NwYW4gc3BhbicpXG5cbiAgICB0aGlzLmxlbmd0aCA9IDBcblxuXG4gICAgdGhpcy5jcmVhdGVMb2FkZXIoKTtcblxuICB9XG5cbiAgY3JlYXRlTG9hZGVyKCkge1xuICAgIHdpbmRvdy5BU1NFVFMuZm9yRWFjaChpbWFnZSA9PiB7XG4gICAgICBjb25zdCB0ZXh0dXJlID0gbmV3IFRleHR1cmUodGhpcy5jYW52YXMuZ2wse1xuICAgICAgICBnZW5lcmF0ZU1pcG1hcHM6IGZhbHNlXG4gICAgICB9KVxuXG4gICAgICBjb25zdCBtZWRpYSA9IG5ldyB3aW5kb3cuSW1hZ2UoKVxuXG4gICAgICBtZWRpYS5jcm9zc09yaWdpbiA9ICdhbm9ueW1vdXMnXG4gICAgICBtZWRpYS5zcmMgPSBpbWFnZVxuICAgICAgbWVkaWEub25sb2FkID0gXyA9PiB7XG4gICAgICAgIHRleHR1cmUuaW1hZ2UgPSBtZWRpYVxuXG4gICAgICAgIHRoaXMub25Bc3NldExvYWRlZCgpXG4gICAgICB9XG5cbiAgICAgIHdpbmRvdy5URVhUVVJFU1tpbWFnZV0gPSB0ZXh0dXJlXG4gICAgfSk7XG4gIH1cblxuICBvbkFzc2V0TG9hZGVkKGltYWdlKSB7XG4gICAgdGhpcy5sZW5ndGggKz0gMVxuXG4gICAgY29uc3QgcGVyY2VudCA9IHRoaXMubGVuZ3RoIC8gdGhpcy53aW5kb3cuQVNTRVRTLmxlbmd0aFxuXG4gICAgdGhpcy5lbGVtZW50cy5udW1iZXJUZXh0LmlubmVySFRNTCA9IGAke01hdGgucm91bmQocGVyY2VudCAqIDEwMCl9JWBcblxuICAgIGlmIChwZXJjZW50ID09PSAxKSB7XG4gICAgICB0aGlzLm9uTG9hZGVkKClcbiAgICB9XG4gIH1cbiAgb25Mb2FkZWQoKSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICB0aGlzLmFuaW1hdGVPdXQgPSBHU0FQLnRpbWVsaW5lKHtcbiAgICAgIGRlbGF5OiAxLjVcbiAgICB9KVxuICBcbiAgICB0aGlzLmFuaW1hdGVPdXQudG8odGhpcy5lbGVtZW50cy50aXRsZVNwYW5zLCB7XG4gICAgICAvLyBhdXRvQWxwaGE6IDAsIHJlbW92ZWQgYmVjYXVzZSB3ZSBub3QgZ29ubmEgZmFkZSBvdXQgdGhlIHRleHQsIGJ1dCBtYWtlIGl0IHRyYW5zbGF0ZSBkb3duXG4gICAgICBkdXJhdGlvbjogMSxcbiAgICAgIGVhc2U6ICdleHBvLk91dCcsXG4gICAgICBzdGFnZ2VyOiAwLjMsXG4gICAgICB5OiAnMTAwJSdcbiAgICB9KVxuXG5cbiAgICB0aGlzLmFuaW1hdGVPdXQudG8odGhpcy5lbGVtZW50cy5udW1iZXJUZXh0LCB7IC8vIGZhZGUgb3V0IHRoZSAxMDAlIG51bWJlclxuICAgICAgZHVyYXRpb246IDAuNSxcbiAgICAgIGVhc2U6ICdleHBvLk91dCcsXG4gICAgICBzdGFnZ2VyOiAwLjMsXG4gICAgICB5OiAnMTAwJSdcbiAgICB9LCAnLT0wLjMnKVxuXG4gICAgdGhpcy5hbmltYXRlT3V0LnRvKHRoaXMuZWxlbWVudCwgeyAvLyByZW1vdmUgdGhlIHByZWxvYWRlclxuICAgICAgZHVyYXRpb246IDAuNSxcbiAgICAgIGVhc2U6ICdleHBvLm91dCcsXG4gICAgICBzY2FsZVk6IDAsXG4gICAgICB0cmFuc2Zvcm1PcmlnaW46ICcwIDAnXG4gICAgfSlcblxuICAgIHRoaXMuYW5pbWF0ZU91dC5jYWxsKCgpID0+IHsgLy8gY2FsbCB0aGUgcmVzb2x2ZSBmdW5jdGlvbiB3aGVuIGNvbXBsZXRpbmcgdGhlIGFuaW1hdGlvblxuICAgICAgdGhpcy5lbWl0KCdjb21wbGV0ZWQnKVxuICAgIH0pXG4gIH0pXG59XG4gIGRlc3Ryb3koKSB7ICBcbiAgICB0aGlzLmVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzLmVsZW1lbnQpXG4gIH0gXG59IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5oID0gKCkgPT4gKFwiY2JkNzMxYmMwMzhlNDg2ZTViNDFcIikiXSwibmFtZXMiOlsiUHJlbG9hZGVyIiwiQ29tcG9uZW50IiwiY29uc3RydWN0b3IiLCJjYW52YXMiLCJzdXBlciIsImVsZW1lbnQiLCJlbGVtZW50cyIsInRpdGxlIiwibnVtYmVyIiwibnVtYmVyVGV4dCIsInRoaXMiLCJ3aW5kb3ciLCJURVhUVVJFUyIsInNwbGl0IiwiZXhwcmVzc2lvbiIsInRpdGxlU3BhbnMiLCJxdWVyeVNlbGVjdG9yQWxsIiwibGVuZ3RoIiwiY3JlYXRlTG9hZGVyIiwiQVNTRVRTIiwiZm9yRWFjaCIsImltYWdlIiwidGV4dHVyZSIsIlRleHR1cmUiLCJnbCIsImdlbmVyYXRlTWlwbWFwcyIsIm1lZGlhIiwiSW1hZ2UiLCJjcm9zc09yaWdpbiIsInNyYyIsIm9ubG9hZCIsIl8iLCJvbkFzc2V0TG9hZGVkIiwicGVyY2VudCIsImlubmVySFRNTCIsIk1hdGgiLCJyb3VuZCIsIm9uTG9hZGVkIiwiUHJvbWlzZSIsInJlc29sdmUiLCJhbmltYXRlT3V0IiwiR1NBUCIsInRpbWVsaW5lIiwiZGVsYXkiLCJ0byIsImR1cmF0aW9uIiwiZWFzZSIsInN0YWdnZXIiLCJ5Iiwic2NhbGVZIiwidHJhbnNmb3JtT3JpZ2luIiwiY2FsbCIsImVtaXQiLCJkZXN0cm95IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImgiXSwic291cmNlUm9vdCI6IiJ9