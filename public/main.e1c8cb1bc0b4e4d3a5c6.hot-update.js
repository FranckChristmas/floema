/*! For license information please see main.e1c8cb1bc0b4e4d3a5c6.hot-update.js.LICENSE.txt */
self.webpackHotUpdatefloema("main",{"./app.js":(e,o,s)=>{s("./node_modules/dotenv/lib/main.js").config();const t=s("./node_modules/morgan/index.js"),i=s("./node_modules/express/index.js"),a=s("./node_modules/errorhandler/index.js"),n=s("./node_modules/body-parser/index.js"),l=s("./node_modules/method-override/index.js"),c=i(),d=s("./node_modules/path-browserify/index.js");e.hot.accept();const r=s("./node_modules/@prismicio/client/dist/index.cjs"),p=(s("./node_modules/prismic-dom/dist/prismic-dom.min.js"),s("./node_modules/@prismicio/helpers/dist/prismic-helpers.esm.js")),u=e=>r.createClient(process.env.PRISMIC_ENDPOINT,{accessToken:process.env.PRISMIC_ACCESS_TOKEN,req:e,fetch}),m=e=>(console.log(e),"product"===e.type?`/detail/${e.slug}`:"about"===e.type?"/about":"collections"===e.type?"/collections":"/");c.use(t("dev")),c.use(n.json()),c.use(n.urlencoded({extended:!1})),c.use(l()),c.use(a()),c.use(i.static(d.join("/","public"))),c.use(((e,o,s)=>{o.locals.ctx={endpoint:process.env.PRISMIC_ENDPOINT,linkResolver:m},o.locals.Prismic=r,o.locals.prismicH=p,o.locals.Link=m,o.locals.Numbers=e=>0===e?"One":1===e?"Two":2===e?"Three":3===e?"Four":"",s()}));const g=async e=>{const[o,s,t,i,a,{results:n}]=await Promise.all([e.getSingle("meta"),e.getSingle("preloader"),e.getSingle("navigation"),e.getSingle("home"),e.getSingle("about"),e.get({filters:[r.filter.at("document.type","collection")],fetchLinks:"product.image"})]),l=[];return a.data.gallery.forEach((e=>{l.push(e.image.url)})),a.data.body.forEach((e=>{"gallery"===e.slice_type&&e.items.forEach((e=>{l.push(e.image.url)}))})),{assets:l,meta:o,home:i,collections:n,about:a,navigation:t,preloader:s}};c.set("views",d.join("/","views")),c.set("view engine","pug"),c.locals.basedir=c.get("views"),c.get("/",(async(e,o)=>{const s=await u(e),t=await g(s);o.render("pages/home",{...t})})),c.get("/about",(async(e,o)=>{const s=await u(e),t=await g(s);console.log(t.about.data.body),o.render("pages/about",{...t})})),c.get("/detail/:uid",(async(e,o)=>{const s=await u(e),t=await g(s),i=await s.getByUID("product",e.params.uid,{fetchLinks:"collection.title"});console.log(i),o.render("pages/detail",{...t,product:i})})),c.get("/collections",(async(e,o)=>{const s=await u(e),t=await g(s);o.render("pages/collections",{...t})})),c.listen(3e3,(()=>{console.log("Example app listening on port 3000")}))}},(function(e){e.h=()=>"032e548f03b892abb3ad"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,