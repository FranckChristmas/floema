/*! For license information please see main.38328cbbe7e1f72053b2.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/Home.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>h});var r=s("./app/components/Media.js"),l=s("./node_modules/lodash/map.js"),i=s.n(l),o=s("./node_modules/ogl/src/core/Transform.js"),n=s("./node_modules/ogl/src/extras/Plane.js"),a=(s("./app/utils/math.js"),s("./node_modules/gsap/index.js"));class h{constructor({gl:e,scene:t,sizes:s}){this.gl=e,this.sizes=s,this.group=new o.Transform,this.mediaElements=document.querySelectorAll(".home__gallery__media__image"),this.createGeometry(),this.createGallery(),this.group.setParent(t),this.x={current:0,target:0,lerp:.1},this.y={current:0,target:0,lerp:.1},this.scrollCurrent={x:0,y:0},this.scroll={x:0,y:0}}createGeometry(){this.geometry=new n.Plane(this.gl)}createGallery(){this.medias=i()(this.mediaElements,((e,t)=>new r.default({element:e,geometry:this.geometry,index:t,gl:this.gl,scene:this.group,sizes:this.sizes})))}onResize(e){i()(this.medias,(t=>t.onResize(e)))}onTouchDown(e,t){this.scrollCurrent.x=this.scroll.x,this.scrollCurrent.y=this.scroll.y}onTouchMove(e,t){const s=e.start-e.end,r=t.start-t.end;this.x.target=this.scrollCurrent.x-s,this.y.target=this.scrollCurrent.y-r,console.log(this.x.target,this.y.target)}onTouchUp(e,t){}update(){this.scroll.current=a.default.utils.interpolate(this.x.current,this.x.target,this.x.lerp),this.scroll.current=a.default.utils.interpolate(this.y.current,this.y.target,this.y.lerp),this.scroll.x=this.x.current,this.scroll.y=this.y.current,i()(this.medias,(e=>{e.update(this.scroll)}))}}}},(function(e){e.h=()=>"ad748b8efd5e1f4d298d"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi4zODMyOGNiYmU3ZTFmNzIwNTNiMi5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7bVdBTWUsTUFBTUEsRUFDbkJDLFdBQUFBLEVBQVksR0FBRUMsRUFBRSxNQUFFQyxFQUFLLE1BQUVDLElBQ3ZCQyxLQUFLSCxHQUFLQSxFQUNWRyxLQUFLRCxNQUFRQSxFQUNiQyxLQUFLQyxNQUFRLElBQUlDLEVBQUFBLFVBRWpCRixLQUFLRyxjQUFnQkMsU0FBU0MsaUJBQWlCLGdDQUUvQ0wsS0FBS00saUJBQ0xOLEtBQUtPLGdCQUVMUCxLQUFLQyxNQUFNTyxVQUFVVixHQUVyQkUsS0FBS1MsRUFBSSxDQUNQQyxRQUFTLEVBQ1RDLE9BQVEsRUFDUkMsS0FBTSxJQUdSWixLQUFLYSxFQUFJLENBQ1BILFFBQVMsRUFDVEMsT0FBUSxFQUNSQyxLQUFNLElBR1JaLEtBQUtjLGNBQWdCLENBQ25CTCxFQUFHLEVBQ0hJLEVBQUcsR0FJTGIsS0FBS2UsT0FBUyxDQUNaTixFQUFHLEVBQ0hJLEVBQUcsRUFFUCxDQUVBUCxjQUFBQSxHQUNFTixLQUFLZ0IsU0FBVyxJQUFJQyxFQUFBQSxNQUFNakIsS0FBS0gsR0FDakMsQ0FFQVUsYUFBQUEsR0FDRVAsS0FBS2tCLE9BQVNDLElBQUluQixLQUFLRyxlQUFlLENBQUNpQixFQUFTQyxJQUN2QyxJQUFJQyxFQUFBQSxRQUFNLENBQ2ZGLFVBQ0FKLFNBQVVoQixLQUFLZ0IsU0FDZkssUUFDQXhCLEdBQUlHLEtBQUtILEdBQ1RDLE1BQU9FLEtBQUtDLE1BQ1pGLE1BQU9DLEtBQUtELFNBSWxCLENBTUF3QixRQUFBQSxDQUFVQyxHQUNSTCxJQUFJbkIsS0FBS2tCLFFBQVFPLEdBQVNBLEVBQU1GLFNBQVVDLElBQzVDLENBQ0FFLFdBQUFBLENBQWFqQixFQUFHSSxHQUNkYixLQUFLYyxjQUFjTCxFQUFJVCxLQUFLZSxPQUFPTixFQUNuQ1QsS0FBS2MsY0FBY0QsRUFBSWIsS0FBS2UsT0FBT0YsQ0FDckMsQ0FDQWMsV0FBQUEsQ0FBYWxCLEVBQUdJLEdBQ2QsTUFBTWUsRUFBWW5CLEVBQUVvQixNQUFRcEIsRUFBRXFCLElBQ3hCQyxFQUFZbEIsRUFBRWdCLE1BQVFoQixFQUFFaUIsSUFFOUI5QixLQUFLUyxFQUFFRSxPQUFTWCxLQUFLYyxjQUFjTCxFQUFJbUIsRUFDdkM1QixLQUFLYSxFQUFFRixPQUFTWCxLQUFLYyxjQUFjRCxFQUFJa0IsRUFFdkNDLFFBQVFDLElBQUlqQyxLQUFLUyxFQUFFRSxPQUFRWCxLQUFLYSxFQUFFRixPQUVwQyxDQUNBdUIsU0FBQUEsQ0FBV3pCLEVBQUdJLEdBRWQsQ0FLQXNCLE1BQUFBLEdBQ0VuQyxLQUFLZSxPQUFPTCxRQUFVMEIsRUFBQUEsUUFBS0MsTUFBTUMsWUFBWXRDLEtBQUtTLEVBQUVDLFFBQVNWLEtBQUtTLEVBQUVFLE9BQVFYLEtBQUtTLEVBQUVHLE1BQ25GWixLQUFLZSxPQUFPTCxRQUFVMEIsRUFBQUEsUUFBS0MsTUFBTUMsWUFBWXRDLEtBQUthLEVBQUVILFFBQVNWLEtBQUthLEVBQUVGLE9BQVFYLEtBQUthLEVBQUVELE1BRW5GWixLQUFLZSxPQUFPTixFQUFJVCxLQUFLUyxFQUFFQyxRQUN2QlYsS0FBS2UsT0FBT0YsRUFBSWIsS0FBS2EsRUFBRUgsUUFFdkJTLElBQUluQixLQUFLa0IsUUFBUU8sSUFDZkEsRUFBTVUsT0FBT25DLEtBQUtlLE9BQU8sR0FFN0Isa0JDbkdGd0IsRUFBb0JDLEVBQUksSUFBTSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zsb2VtYS8uL2FwcC9jb21wb25lbnRzL0hvbWUuanMiLCJ3ZWJwYWNrOi8vZmxvZW1hL3dlYnBhY2svcnVudGltZS9nZXRGdWxsSGFzaCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTWVkaWEgZnJvbSAnLi9NZWRpYSdcbmltcG9ydCBtYXAgZnJvbSAnbG9kYXNoL21hcCdcbmltcG9ydCB7IFBsYW5lLCBUcmFuc2Zvcm0gfSBmcm9tICdvZ2wnXG5pbXBvcnQgeyBsZXJwIH0gZnJvbSAndXRpbHMvbWF0aCdcbmltcG9ydCBHU0FQIGZyb20gJ2dzYXAnXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEhvbWUge1xuICBjb25zdHJ1Y3Rvcih7IGdsLCBzY2VuZSwgc2l6ZXMgfSkge1xuICAgIHRoaXMuZ2wgPSBnbFxuICAgIHRoaXMuc2l6ZXMgPSBzaXplc1xuICAgIHRoaXMuZ3JvdXAgPSBuZXcgVHJhbnNmb3JtKClcblxuICAgIHRoaXMubWVkaWFFbGVtZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5ob21lX19nYWxsZXJ5X19tZWRpYV9faW1hZ2UnKVxuXG4gICAgdGhpcy5jcmVhdGVHZW9tZXRyeSgpXG4gICAgdGhpcy5jcmVhdGVHYWxsZXJ5KClcblxuICAgIHRoaXMuZ3JvdXAuc2V0UGFyZW50KHNjZW5lKVxuXG4gICAgdGhpcy54ID0ge1xuICAgICAgY3VycmVudDogMCxcbiAgICAgIHRhcmdldDogMCxcbiAgICAgIGxlcnA6IDAuMSxcbiAgICB9XG5cbiAgICB0aGlzLnkgPSB7XG4gICAgICBjdXJyZW50OiAwLFxuICAgICAgdGFyZ2V0OiAwLFxuICAgICAgbGVycDogMC4xLFxuICAgIH1cblxuICAgIHRoaXMuc2Nyb2xsQ3VycmVudCA9IHtcbiAgICAgIHg6IDAsIFxuICAgICAgeTogMCwgXG4gICAgfVxuXG5cbiAgICB0aGlzLnNjcm9sbCA9IHtcbiAgICAgIHg6IDAsXG4gICAgICB5OiAwLFxuICAgIH1cbiAgfVxuXG4gIGNyZWF0ZUdlb21ldHJ5KCkge1xuICAgIHRoaXMuZ2VvbWV0cnkgPSBuZXcgUGxhbmUodGhpcy5nbClcbiAgfVxuXG4gIGNyZWF0ZUdhbGxlcnkoKSB7XG4gICAgdGhpcy5tZWRpYXMgPSBtYXAodGhpcy5tZWRpYUVsZW1lbnRzLCAoZWxlbWVudCwgaW5kZXgpID0+IHtcbiAgICAgIHJldHVybiBuZXcgTWVkaWEoe1xuICAgICAgICBlbGVtZW50LFxuICAgICAgICBnZW9tZXRyeTogdGhpcy5nZW9tZXRyeSxcbiAgICAgICAgaW5kZXgsXG4gICAgICAgIGdsOiB0aGlzLmdsLFxuICAgICAgICBzY2VuZTogdGhpcy5ncm91cCxcbiAgICAgICAgc2l6ZXM6IHRoaXMuc2l6ZXMsICBcbiAgICAgIH0pXG5cbiAgICB9KVxuICB9XG5cbiAgLyoqXG4gICAqIFxuICAgKiBldmVudHNcbiAgICovXG4gIG9uUmVzaXplKCBldmVudCApIHtcbiAgICBtYXAodGhpcy5tZWRpYXMsIG1lZGlhID0+IG1lZGlhLm9uUmVzaXplKCBldmVudCApKVxuICB9XG4gIG9uVG91Y2hEb3duICh4LCB5KSB7IFxuICAgIHRoaXMuc2Nyb2xsQ3VycmVudC54ID0gdGhpcy5zY3JvbGwueFxuICAgIHRoaXMuc2Nyb2xsQ3VycmVudC55ID0gdGhpcy5zY3JvbGwueVxuICB9XG4gIG9uVG91Y2hNb3ZlICh4LCB5KSB7XG4gICAgY29uc3QgeERpc3RhbmNlID0geC5zdGFydCAtIHguZW5kXG4gICAgY29uc3QgeURpc3RhbmNlID0geS5zdGFydCAtIHkuZW5kXG5cbiAgICB0aGlzLngudGFyZ2V0ID0gdGhpcy5zY3JvbGxDdXJyZW50LnggLSB4RGlzdGFuY2VcbiAgICB0aGlzLnkudGFyZ2V0ID0gdGhpcy5zY3JvbGxDdXJyZW50LnkgLSB5RGlzdGFuY2VcblxuICAgIGNvbnNvbGUubG9nKHRoaXMueC50YXJnZXQsIHRoaXMueS50YXJnZXQpXG5cbiAgfVxuICBvblRvdWNoVXAgKHgsIHkpIHtcblxuICB9XG5cbiAgLyoqXG4gICAqIFVwZGF0ZVxuICAgKi9cbiAgdXBkYXRlKCkge1xuICAgIHRoaXMuc2Nyb2xsLmN1cnJlbnQgPSBHU0FQLnV0aWxzLmludGVycG9sYXRlKHRoaXMueC5jdXJyZW50LCB0aGlzLngudGFyZ2V0LCB0aGlzLngubGVycCkgXG4gICAgdGhpcy5zY3JvbGwuY3VycmVudCA9IEdTQVAudXRpbHMuaW50ZXJwb2xhdGUodGhpcy55LmN1cnJlbnQsIHRoaXMueS50YXJnZXQsIHRoaXMueS5sZXJwKSBcblxuICAgIHRoaXMuc2Nyb2xsLnggPSB0aGlzLnguY3VycmVudFxuICAgIHRoaXMuc2Nyb2xsLnkgPSB0aGlzLnkuY3VycmVudFxuXG4gICAgbWFwKHRoaXMubWVkaWFzLCBtZWRpYSA9PiB7XG4gICAgICBtZWRpYS51cGRhdGUodGhpcy5zY3JvbGwpXG4gICAgfSlcbiAgfVxufSIsIl9fd2VicGFja19yZXF1aXJlX18uaCA9ICgpID0+IChcImFkNzQ4YjhlZmQ1ZTFmNGQyOThkXCIpIl0sIm5hbWVzIjpbIkhvbWUiLCJjb25zdHJ1Y3RvciIsImdsIiwic2NlbmUiLCJzaXplcyIsInRoaXMiLCJncm91cCIsIlRyYW5zZm9ybSIsIm1lZGlhRWxlbWVudHMiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJjcmVhdGVHZW9tZXRyeSIsImNyZWF0ZUdhbGxlcnkiLCJzZXRQYXJlbnQiLCJ4IiwiY3VycmVudCIsInRhcmdldCIsImxlcnAiLCJ5Iiwic2Nyb2xsQ3VycmVudCIsInNjcm9sbCIsImdlb21ldHJ5IiwiUGxhbmUiLCJtZWRpYXMiLCJtYXAiLCJlbGVtZW50IiwiaW5kZXgiLCJNZWRpYSIsIm9uUmVzaXplIiwiZXZlbnQiLCJtZWRpYSIsIm9uVG91Y2hEb3duIiwib25Ub3VjaE1vdmUiLCJ4RGlzdGFuY2UiLCJzdGFydCIsImVuZCIsInlEaXN0YW5jZSIsImNvbnNvbGUiLCJsb2ciLCJvblRvdWNoVXAiLCJ1cGRhdGUiLCJHU0FQIiwidXRpbHMiLCJpbnRlcnBvbGF0ZSIsIl9fd2VicGFja19yZXF1aXJlX18iLCJoIl0sInNvdXJjZVJvb3QiOiIifQ==