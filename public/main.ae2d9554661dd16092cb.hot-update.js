/*! For license information please see main.ae2d9554661dd16092cb.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/classes/Components.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>a});var n=s("./node_modules/lodash/each.js"),l=s.n(n),o=s("./node_modules/events/events.js"),r=s.n(o);class a extends(r()){constructor({element:e,elements:t}){super(),this.selector=e,this.selectorChildren={...t},this.create(),this.addEventListeners()}create(){this.element=document.querySelector(this.selector),this.elements={},console.log("Created element:",this.element),this.element?l()(this.selectorChildren,((e,t)=>{e instanceof window.HTMLElement||e instanceof window.NodeList||Array.isArray(e)?this.elements[t]=e:(this.elements[t]=document.querySelectorAll(e),0===this.elements[t].length?this.elements[t]=null:1===this.elements[t].length&&(this.elements[t]=document.querySelector(e)))})):console.error("Element not found for this selector:",this.selector)}addEventListeners(){}removeEventListeners(){}}},"./app/components/preloader.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>r});var n=s("./app/classes/Components.js"),l=s("./node_modules/lodash/each.js"),o=s.n(l);class r extends n.default{constructor(){super({element:".preloader",elements:{title:".preloader__text",number:".preloader__number",images:document.querySelectorAll("img")}}),this.length=0,console.log(this.elements,this.element),this.createLoader()}createLoader(){o()(this.elements.images,(e=>{const t=new Image;t.onload=this.onAssetLoaded(t),t.src=this.element.getAttribute("data-src"),console.log(t)}))}onAssetLoaded(e){this.length+=1,console.log(Math.round(this.length/this.elements.images.length*100))}}}},(function(e){e.h=()=>"7fe5dfd2445442d84acd"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5hZTJkOTU1NDY2MWRkMTYwOTJjYi5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7eU5BSWUsTUFBTUEsVUFBa0JDLEtBQ3JDQyxXQUFBQSxFQUFhLFFBQ1hDLEVBQU8sU0FDUEMsSUFFQUMsUUFFRUMsS0FBS0MsU0FBV0osRUFDaEJHLEtBQUtFLGlCQUFtQixJQUNuQkosR0FHTEUsS0FBS0csU0FFTEgsS0FBS0ksbUJBQ1QsQ0FDQUQsTUFBQUEsR0FDRUgsS0FBS0gsUUFBVVEsU0FBU0MsY0FBY04sS0FBS0MsVUFDM0NELEtBQUtGLFNBQVcsQ0FBQyxFQUdqQlMsUUFBUUMsSUFBSSxtQkFBb0JSLEtBQUtILFNBRWhDRyxLQUFLSCxRQUtWWSxJQUFLVCxLQUFLRSxrQkFBa0IsQ0FBQ1EsRUFBT0MsS0FDOUJELGFBQWlCRSxPQUFPQyxhQUFlSCxhQUFpQkUsT0FBT0UsVUFBWUMsTUFBTUMsUUFBUU4sR0FDM0ZWLEtBQUtGLFNBQVNhLEdBQU9ELEdBRXJCVixLQUFLRixTQUFTYSxHQUFPTixTQUFTWSxpQkFBaUJQLEdBRWIsSUFBOUJWLEtBQUtGLFNBQVNhLEdBQUtPLE9BQ3JCbEIsS0FBS0YsU0FBU2EsR0FBTyxLQUNrQixJQUE5QlgsS0FBS0YsU0FBU2EsR0FBS08sU0FDNUJsQixLQUFLRixTQUFTYSxHQUFPTixTQUFTQyxjQUFjSSxJQUVoRCxJQWZBSCxRQUFRWSxNQUFNLHVDQUF3Q25CLEtBQUtDLFNBaUIvRCxDQUVBRyxpQkFBQUEsR0FFQSxDQUVBZ0Isb0JBQUFBLEdBRUEsaUtDbERhLE1BQU1DLFVBQWtCM0IsRUFBQUEsUUFDckNFLFdBQUFBLEdBQ0VHLE1BQU0sQ0FDSkYsUUFBUyxhQUNUQyxTQUFVLENBQ1J3QixNQUFPLG1CQUNQQyxPQUFRLHFCQUNSQyxPQUFRbkIsU0FBU1ksaUJBQWlCLFVBR3RDakIsS0FBS2tCLE9BQVMsRUFFZFgsUUFBUUMsSUFBSVIsS0FBS0YsU0FBVUUsS0FBS0gsU0FFaENHLEtBQUt5QixjQUNQLENBRUFBLFlBQUFBLEdBQ0VoQixJQUFLVCxLQUFLRixTQUFTMEIsUUFBUTNCLElBQ3pCLE1BQU02QixFQUFRLElBQUlDLE1BRWxCRCxFQUFNRSxPQUFTNUIsS0FBSzZCLGNBQWNILEdBQ2xDQSxFQUFNSSxJQUFNOUIsS0FBS0gsUUFBUWtDLGFBQWEsWUFFdEN4QixRQUFRQyxJQUFJa0IsRUFBTSxHQUV0QixDQUVBRyxhQUFBQSxDQUFjSCxHQUNaMUIsS0FBS2tCLFFBQVUsRUFDZlgsUUFBUUMsSUFBSXdCLEtBQUtDLE1BQU1qQyxLQUFLa0IsT0FBU2xCLEtBQUtGLFNBQVMwQixPQUFPTixPQUFTLEtBQ3JFLGtCQ2xDRmdCLEVBQW9CQyxFQUFJLElBQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbG9lbWEvLi9hcHAvY2xhc3Nlcy9Db21wb25lbnRzLmpzIiwid2VicGFjazovL2Zsb2VtYS8uL2FwcC9jb21wb25lbnRzL3ByZWxvYWRlci5qcyIsIndlYnBhY2s6Ly9mbG9lbWEvd2VicGFjay9ydW50aW1lL2dldEZ1bGxIYXNoIl0sInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IGVhY2ggZnJvbSAnbG9kYXNoL2VhY2gnIC8vLSBsaWJyYXJ5IHRvIHVzZSBlYWNoIGluc3RlYWQgb2YgZm9yRWFjaCBtZXRob2QsIHdoaWNoIGlzbid0IGF2YWlsYWJsZSBpbiBOb2RlLmpzXG5pbXBvcnQgRXZlbnRFbWl0dGVyIGZyb20gJ2V2ZW50cydcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ29tcG9uZW50IGV4dGVuZHMgRXZlbnRFbWl0dGVye1xuICBjb25zdHJ1Y3RvciAoeyBcbiAgICBlbGVtZW50LCBcbiAgICBlbGVtZW50c1xuICB9KSB7XG4gICAgc3VwZXIoKVxuICAgIFxuICAgICAgdGhpcy5zZWxlY3RvciA9IGVsZW1lbnRcbiAgICAgIHRoaXMuc2VsZWN0b3JDaGlsZHJlbiA9IHtcbiAgICAgICAgLi4uZWxlbWVudHNcbiAgICAgIH1cblxuICAgICAgdGhpcy5jcmVhdGUoKVxuXG4gICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXJzKClcbiAgfVxuICBjcmVhdGUoKSB7XG4gICAgdGhpcy5lbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLnNlbGVjdG9yKVxuICAgIHRoaXMuZWxlbWVudHMgPSB7fVxuXG5cbiAgICBjb25zb2xlLmxvZyhcIkNyZWF0ZWQgZWxlbWVudDpcIiwgdGhpcy5lbGVtZW50KSAvLyBEZWJ1Z1xuXG4gICAgaWYgKCF0aGlzLmVsZW1lbnQpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJFbGVtZW50IG5vdCBmb3VuZCBmb3IgdGhpcyBzZWxlY3RvcjpcIiwgdGhpcy5zZWxlY3RvcikgLy8gRGVidWdcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGVhY2godGhpcy5zZWxlY3RvckNoaWxkcmVuLCAoZW50cnksIGtleSkgID0+IHtcbiAgICAgIGlmIChlbnRyeSBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MRWxlbWVudCB8fCBlbnRyeSBpbnN0YW5jZW9mIHdpbmRvdy5Ob2RlTGlzdCB8fCBBcnJheS5pc0FycmF5KGVudHJ5KSkge1xuICAgICAgICB0aGlzLmVsZW1lbnRzW2tleV0gPSBlbnRyeVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5lbGVtZW50c1trZXldID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChlbnRyeSlcbiAgICAgICAgXG4gICAgICAgIGlmICh0aGlzLmVsZW1lbnRzW2tleV0ubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgdGhpcy5lbGVtZW50c1trZXldID0gbnVsbFxuICAgICAgICB9IGVsc2UgaWYgKHRoaXMuZWxlbWVudHNba2V5XS5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICB0aGlzLmVsZW1lbnRzW2tleV0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGVudHJ5KVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSlcbiAgfVxuXG4gIGFkZEV2ZW50TGlzdGVuZXJzKCkge1xuXG4gIH1cblxuICByZW1vdmVFdmVudExpc3RlbmVycygpIHtcblxuICB9XG59XG4iLCJpbXBvcnQgQ29tcG9uZW50IGZyb20gXCIuLi9jbGFzc2VzL0NvbXBvbmVudHNcIjtcbmltcG9ydCBlYWNoIGZyb20gJ2xvZGFzaC9lYWNoJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUHJlbG9hZGVyIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoe1xuICAgICAgZWxlbWVudDogXCIucHJlbG9hZGVyXCIsXG4gICAgICBlbGVtZW50czoge1xuICAgICAgICB0aXRsZTogJy5wcmVsb2FkZXJfX3RleHQnLFxuICAgICAgICBudW1iZXI6ICcucHJlbG9hZGVyX19udW1iZXInLCAvLyBnZXQgYWNjZXNzIHRvIHRoZSBsb2FkZXIgbnVtYmVyXG4gICAgICAgIGltYWdlczogZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnaW1nJylcbiAgICAgIH1cbiAgICB9KTtcbiAgICB0aGlzLmxlbmd0aCA9IDBcblxuICAgIGNvbnNvbGUubG9nKHRoaXMuZWxlbWVudHMsIHRoaXMuZWxlbWVudCk7XG5cbiAgICB0aGlzLmNyZWF0ZUxvYWRlcigpO1xuICB9XG5cbiAgY3JlYXRlTG9hZGVyKCkge1xuICAgIGVhY2godGhpcy5lbGVtZW50cy5pbWFnZXMsIGVsZW1lbnQgPT4ge1xuICAgICAgY29uc3QgaW1hZ2UgPSBuZXcgSW1hZ2UoKVxuXG4gICAgICBpbWFnZS5vbmxvYWQgPSB0aGlzLm9uQXNzZXRMb2FkZWQoaW1hZ2UpXG4gICAgICBpbWFnZS5zcmMgPSB0aGlzLmVsZW1lbnQuZ2V0QXR0cmlidXRlKCdkYXRhLXNyYycpXG5cbiAgICAgIGNvbnNvbGUubG9nKGltYWdlKTtcbiAgICB9KVxuICB9XG5cbiAgb25Bc3NldExvYWRlZChpbWFnZSkge1xuICAgIHRoaXMubGVuZ3RoICs9IDFcbiAgICBjb25zb2xlLmxvZyhNYXRoLnJvdW5kKHRoaXMubGVuZ3RoIC8gdGhpcy5lbGVtZW50cy5pbWFnZXMubGVuZ3RoICogMTAwKSk7XG4gIH1cbn0iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmggPSAoKSA9PiAoXCI3ZmU1ZGZkMjQ0NTQ0MmQ4NGFjZFwiKSJdLCJuYW1lcyI6WyJDb21wb25lbnQiLCJFdmVudEVtaXR0ZXIiLCJjb25zdHJ1Y3RvciIsImVsZW1lbnQiLCJlbGVtZW50cyIsInN1cGVyIiwidGhpcyIsInNlbGVjdG9yIiwic2VsZWN0b3JDaGlsZHJlbiIsImNyZWF0ZSIsImFkZEV2ZW50TGlzdGVuZXJzIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY29uc29sZSIsImxvZyIsImVhY2giLCJlbnRyeSIsImtleSIsIndpbmRvdyIsIkhUTUxFbGVtZW50IiwiTm9kZUxpc3QiLCJBcnJheSIsImlzQXJyYXkiLCJxdWVyeVNlbGVjdG9yQWxsIiwibGVuZ3RoIiwiZXJyb3IiLCJyZW1vdmVFdmVudExpc3RlbmVycyIsIlByZWxvYWRlciIsInRpdGxlIiwibnVtYmVyIiwiaW1hZ2VzIiwiY3JlYXRlTG9hZGVyIiwiaW1hZ2UiLCJJbWFnZSIsIm9ubG9hZCIsIm9uQXNzZXRMb2FkZWQiLCJzcmMiLCJnZXRBdHRyaWJ1dGUiLCJNYXRoIiwicm91bmQiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiaCJdLCJzb3VyY2VSb290IjoiIn0=