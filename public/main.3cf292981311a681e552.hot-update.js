/*! For license information please see main.3cf292981311a681e552.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/Canvas/Collections/Index.js":(t,e,s)=>{s.r(e),s.d(e,{default:()=>d});var l=s("./app/components/Canvas/Collections/Media.js"),i=s("./node_modules/lodash/map.js"),o=s.n(i),r=s("./node_modules/ogl/src/core/Transform.js"),n=s("./node_modules/ogl/src/extras/Plane.js"),c=s("./node_modules/gsap/index.js"),h=s("./node_modules/prefix/index.js"),a=s.n(h);const d=class{constructor({gl:t,scene:e,sizes:s}){this.gl=t,this.sizes=s,this.scene=e,this.transformPrefix=a()("transform"),this.group=new r.Transform,this.galleryElement=document.querySelector(".collections__gallery__wrapper"),this.titlesElement=document.querySelector(".collections__titles"),this.collectionsElements=document.querySelectorAll(".collections__article"),this.collectionsElementsActive="collections__article--active",this.mediasElements=document.querySelectorAll(".collections__gallery__media"),this.scroll={current:0,target:0,start:0,lerp:.1,velocity:1},this.createGeometry(),this.createGallery(),this.group.setParent(this.scene),this.show()}createGeometry(){this.geometry=new n.Plane(this.gl)}createGallery(){this.medias=o()(this.mediasElements,((t,e)=>new l.default({element:t,geometry:this.geometry,index:e,gl:this.gl,scene:this.group,sizes:this.sizes})))}show(){o()(this.medias,(t=>t.show()))}hide(){o()(this.medias,(t=>t.hide()))}onResize(t){this.bounds=this.galleryElement.getBoundingClientRect(),this.scroll.last=this.scroll.target=0,o()(this.medias,(e=>e.onResize(t,this.scroll))),this.scroll.limit=this.bounds.width-this.medias[0].element.clientWidth}onTouchDown({x:t,y:e}){this.scroll.last=this.scroll.current}onTouchMove({x:t,y:e}){const s=t.start-t.end;this.scroll.target=this.scroll.last-s}onTouchUp({x:t,y:e}){}onWheel({pixelY:t}){this.scroll.target-=t}onChange(t){this.index=t;const e=parseInt(this.mediasElements[this.index].getAttribute("data-index"));o()(this.collectionsElements,((t,s)=>{s===e?t.classList.add(this.collectionsElementsActive):t.classList.remove(this.collectionsElementsActive)})),console.log(this.titlesElement.style[this.transformPrefix]=`translateY(-50%, -${25*e}%)`),this.titlesElement.style[this.transformPrefix]=`translate(-50%, -${25*e}%)`}update(){if(!this.bounds)return;this.scroll.target=c.default.utils.clamp(-this.scroll.limit,0,this.scroll.target),this.scroll.current=c.default.utils.interpolate(this.scroll.current,this.scroll.target,this.scroll.lerp),this.scroll.last<this.scroll.current?this.scroll.direction="right":this.scroll.last>this.scroll.current&&(this.scroll.direction="left"),this.scroll.last=this.scroll.current,o()(this.medias,((t,e)=>{t.update(this.scroll.current)}));const t=Math.floor(Math.abs(this.scroll.current/this.scroll.limit)*this.medias.length);this.index!==t&&this.onChange(t)}destroy(){this.scene.removeChild(this.group)}}}},(function(t){t.h=()=>"e18bccd5fe1d7e24c922"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,