/*! For license information please see main.7746fcd3b154afb8ecc4.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/Canvas/Index.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>d});var a=s("./node_modules/ogl/src/core/Renderer.js"),n=s("./node_modules/ogl/src/core/Camera.js"),i=s("./node_modules/ogl/src/core/Transform.js"),r=s("./node_modules/ogl/src/extras/Box.js"),o=s("./node_modules/ogl/src/core/Program.js"),h=s("./node_modules/ogl/src/core/Mesh.js");class d{constructor(){this.createCamera(),this.createRenderer(),this.createScene(),this.createCube()}createRenderer(){this.renderer=new a.Renderer,this.gl=this.renderer.gl,document.body.appendChild(this.gl.canvas)}createCamera(){this.camera=new n.Camera(this.gl),this.camera.position.z=5}createScene(){this.scene=new i.Transform}createCube(){this.geometry=new r.Box(this.gl),this.program=new o.Program(this.gl,{vertex:"\n          attribute vec3 position;\n\n          uniform mat4 modelViewMatrix;\n          uniform mat4 projectionMatrix;\n\n          void main() {\n              gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n          }\n      ",fragment:"\n          void main() {\n              gl_FragColor = vec4(1.0);\n          }\n      "}),this.mesh=new h.Mesh(this.gl,{geometry:this.geometry,program:this.program}),this.mesh.setParent(this.scene)}onResize(){this.renderer.setSize(window.innerWidth,window.innerHeight),this.camera.perspective({aspect:window.innerWidth/window.innerHeight})}update(){this.renderer.render({scene:this.scene,camera:this.camera})}}},"./app/index.js":(e,t,s)=>{s.r(t);var a=s("./node_modules/lodash/each.js"),n=s.n(a),i=s("./app/components/Canvas/Index.js"),r=s("./app/components/preloader.js"),o=s("./app/pages/About/Index.js"),h=s("./app/pages/Collections/Index.js"),d=s("./app/pages/Detail/Index.js"),c=s("./app/pages/Home/Index.js"),p=s("./app/components/Navigation.js");new class{constructor(){this.createContent(),this.createPreloader(),this.createNavigation(),this.createCanvas(),this.createPages(),this.addEventListeners(),this.addLinkListeners(),this.update()}createNavigation(){this.navigation=new p.default({template:this.template})}createPreloader(){this.preloader=new r.default,this.preloader.once("completed",this.onPreloaded.bind(this))}createCanvas(){this.canvas=new i.default}createContent(){this.content=document.querySelector(".content"),this.template=this.content.getAttribute("data-template")}createPages(){this.pages={about:new o.default,collections:new h.default,detail:new d.default,home:new c.default},this.page=this.pages[this.template],this.page.create()}onPreloaded(){this.preloader.destroy(),this.onResize(),this.page.show()}async onChange(e){await this.page.hide();const t=await window.fetch(e);if(200===t.status){const e=await t.text(),s=document.createElement("div");s.innerHTML=e;const a=s.querySelector(".content");this.template=a.getAttribute("data-template"),this.navigation.onChange(this.template),this.content.setAttribute("data-template",this.template),this.content.innerHTML=a.innerHTML,this.page=this.pages[this.template],this.page.create(),this.onResize(),this.page.show(),this.addLinkListeners()}else console.log("errrrrrrrror")}onResize(){this.canvas&&this.canvas.onResize&&this.canvas.onResize(),this.page&&this.page.onResize&&this.page.onResize()}update(){this.canvas&&this.canvas.update&&this.canvas.update(),this.page&&this.page.update&&this.page.update(),this.frame=window.requestAnimationFrame(this.update.bind(this))}addEventListeners(){window.addEventListener("resize",this.onResize.bind(this))}addLinkListeners(){const e=document.querySelectorAll("a");n()(e,(e=>{e.onclick=t=>{t.preventDefault();const{href:s}=e;this.onChange(s)}}))}}}},(function(e){e.h=()=>"4d4a76580340752a6c17"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,